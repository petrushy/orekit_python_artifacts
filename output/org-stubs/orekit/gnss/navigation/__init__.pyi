import java.util
import org.orekit.data
import org.orekit.gnss
import org.orekit.propagation.analytical.gnss.data
import org.orekit.time
import typing



class RinexNavigation:
    def __init__(self): ...
    def addBeidouNavigationMessage(self, beidouNavigationMessage: org.orekit.propagation.analytical.gnss.data.BeidouNavigationMessage) -> None: ...
    def addComment(self, string: str) -> None: ...
    def addGPSNavigationMessage(self, gPSNavigationMessage: org.orekit.propagation.analytical.gnss.data.GPSNavigationMessage) -> None: ...
    def addGalileoNavigationMessage(self, galileoNavigationMessage: org.orekit.propagation.analytical.gnss.data.GalileoNavigationMessage) -> None: ...
    def addGlonassNavigationMessage(self, gLONASSNavigationMessage: org.orekit.propagation.analytical.gnss.data.GLONASSNavigationMessage) -> None: ...
    def addIRNSSNavigationMessage(self, iRNSSNavigationMessage: org.orekit.propagation.analytical.gnss.data.IRNSSNavigationMessage) -> None: ...
    def addQZSSNavigationMessage(self, qZSSNavigationMessage: org.orekit.propagation.analytical.gnss.data.QZSSNavigationMessage) -> None: ...
    def addSBASNavigationMessage(self, sBASNavigationMessage: org.orekit.propagation.analytical.gnss.data.SBASNavigationMessage) -> None: ...
    def addTimeSystemCorrections(self, timeSystemCorrection: 'RinexNavigation.TimeSystemCorrection') -> None: ...
    def getAgencyName(self) -> str: ...
    @typing.overload
    def getBeidouNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.BeidouNavigationMessage]: ...
    @typing.overload
    def getBeidouNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.BeidouNavigationMessage]]: ...
    def getComments(self) -> str: ...
    def getCreationDate(self) -> org.orekit.time.AbsoluteDate: ...
    def getCreationDateString(self) -> str: ...
    def getCreationTimeString(self) -> str: ...
    def getCreationTimeZoneString(self) -> str: ...
    def getFileType(self) -> str: ...
    def getFormatVersion(self) -> float: ...
    @typing.overload
    def getGPSNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.GPSNavigationMessage]: ...
    @typing.overload
    def getGPSNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.GPSNavigationMessage]]: ...
    @typing.overload
    def getGalileoNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.GalileoNavigationMessage]: ...
    @typing.overload
    def getGalileoNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.GalileoNavigationMessage]]: ...
    @typing.overload
    def getGlonassNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.GLONASSNavigationMessage]: ...
    @typing.overload
    def getGlonassNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.GLONASSNavigationMessage]]: ...
    @typing.overload
    def getIRNSSNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.IRNSSNavigationMessage]: ...
    @typing.overload
    def getIRNSSNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.IRNSSNavigationMessage]]: ...
    def getIonosphericCorrectionType(self) -> str: ...
    def getKlobucharAlpha(self) -> typing.List[float]: ...
    def getKlobucharBeta(self) -> typing.List[float]: ...
    def getNeQuickAlpha(self) -> typing.List[float]: ...
    def getNumberOfLeapSeconds(self) -> int: ...
    def getProgramName(self) -> str: ...
    @typing.overload
    def getQZSSNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.QZSSNavigationMessage]: ...
    @typing.overload
    def getQZSSNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.QZSSNavigationMessage]]: ...
    @typing.overload
    def getSBASNavigationMessages(self, string: str) -> java.util.List[org.orekit.propagation.analytical.gnss.data.SBASNavigationMessage]: ...
    @typing.overload
    def getSBASNavigationMessages(self) -> java.util.Map[str, java.util.List[org.orekit.propagation.analytical.gnss.data.SBASNavigationMessage]]: ...
    def getSatelliteSystem(self) -> org.orekit.gnss.SatelliteSystem: ...
    def getTimeSystemCorrections(self) -> java.util.List['RinexNavigation.TimeSystemCorrection']: ...
    def setAgencyName(self, string: str) -> None: ...
    def setCreationDate(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setCreationDateString(self, string: str) -> None: ...
    def setCreationTimeString(self, string: str) -> None: ...
    def setCreationTimeZoneString(self, string: str) -> None: ...
    def setFileType(self, string: str) -> None: ...
    def setFormatVersion(self, double: float) -> None: ...
    def setIonosphericCorrectionType(self, string: str) -> None: ...
    def setKlobucharAlpha(self, doubleArray: typing.List[float]) -> None: ...
    def setKlobucharBeta(self, doubleArray: typing.List[float]) -> None: ...
    def setNeQuickAlpha(self, doubleArray: typing.List[float]) -> None: ...
    def setNumberOfLeapSeconds(self, int: int) -> None: ...
    def setProgramName(self, string: str) -> None: ...
    def setSatelliteSystem(self, satelliteSystem: org.orekit.gnss.SatelliteSystem) -> None: ...
    class TimeSystemCorrection:
        def __init__(self, string: str, double: float, double2: float, int: int, int2: int): ...
        def getTimeSystemCorrectionA0(self) -> float: ...
        def getTimeSystemCorrectionA1(self) -> float: ...
        def getTimeSystemCorrectionSecOfWeek(self) -> int: ...
        def getTimeSystemCorrectionType(self) -> str: ...
        def getTimeSystemCorrectionWeekNumber(self) -> int: ...

class RinexNavigationParser:
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, timeScales: org.orekit.time.TimeScales): ...
    def parse(self, dataSource: org.orekit.data.DataSource) -> RinexNavigation: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.orekit.gnss.navigation")``.

    RinexNavigation: typing.Type[RinexNavigation]
    RinexNavigationParser: typing.Type[RinexNavigationParser]
