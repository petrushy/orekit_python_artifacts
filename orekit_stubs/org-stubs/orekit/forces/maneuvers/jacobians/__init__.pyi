import org.orekit.forces.maneuvers
import org.orekit.forces.maneuvers.trigger
import org.orekit.propagation
import org.orekit.propagation.integration
import org.orekit.time
import typing



class Duration(org.orekit.propagation.AdditionalStateProvider):
    def __init__(self, string: str, string2: str, string3: str): ...
    def getAdditionalState(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> typing.List[float]: ...
    def getName(self) -> str: ...
    def yields(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> bool: ...

class MassDepletionDelay(org.orekit.propagation.integration.AdditionalDerivativesProvider):
    PREFIX: typing.ClassVar[str] = ...
    def __init__(self, string: str, boolean: bool, maneuver: org.orekit.forces.maneuvers.Maneuver): ...
    def combinedDerivatives(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> org.orekit.propagation.integration.CombinedDerivatives: ...
    def getDimension(self) -> int: ...
    def getName(self) -> str: ...
    def init(self, spacecraftState: org.orekit.propagation.SpacecraftState, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...

class MedianDate(org.orekit.propagation.AdditionalStateProvider):
    def __init__(self, string: str, string2: str, string3: str): ...
    def getAdditionalState(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> typing.List[float]: ...
    def getName(self) -> str: ...
    def yields(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> bool: ...

class TriggerDate(org.orekit.propagation.AdditionalStateProvider, org.orekit.forces.maneuvers.trigger.ManeuverTriggersResetter):
    def __init__(self, string: str, string2: str, boolean: bool, maneuver: org.orekit.forces.maneuvers.Maneuver, double: float): ...
    def getAdditionalState(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> typing.List[float]: ...
    def getMassDepletionDelay(self) -> MassDepletionDelay: ...
    def getName(self) -> str: ...
    def init(self, spacecraftState: org.orekit.propagation.SpacecraftState, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def maneuverTriggered(self, spacecraftState: org.orekit.propagation.SpacecraftState, boolean: bool) -> None: ...
    def resetState(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> org.orekit.propagation.SpacecraftState: ...
    def yields(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> bool: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.orekit.forces.maneuvers.jacobians")``.

    Duration: typing.Type[Duration]
    MassDepletionDelay: typing.Type[MassDepletionDelay]
    MedianDate: typing.Type[MedianDate]
    TriggerDate: typing.Type[TriggerDate]
