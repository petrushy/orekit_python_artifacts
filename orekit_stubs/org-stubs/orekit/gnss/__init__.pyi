import java.io
import java.lang
import java.util
import org.orekit.bodies
import org.orekit.data
import org.orekit.frames
import org.orekit.gnss.antenna
import org.orekit.gnss.attitude
import org.orekit.gnss.metric
import org.orekit.gnss.rflink
import org.orekit.propagation
import org.orekit.propagation.analytical.gnss.data
import org.orekit.time
import org.orekit.utils
import typing



class DOP:
    def __init__(self, geodeticPoint: org.orekit.bodies.GeodeticPoint, absoluteDate: org.orekit.time.AbsoluteDate, int: int, double: float, double2: float, double3: float, double4: float, double5: float): ...
    def getDate(self) -> org.orekit.time.AbsoluteDate: ...
    def getGdop(self) -> float: ...
    def getGnssNb(self) -> int: ...
    def getHdop(self) -> float: ...
    def getLocation(self) -> org.orekit.bodies.GeodeticPoint: ...
    def getPdop(self) -> float: ...
    def getTdop(self) -> float: ...
    def getVdop(self) -> float: ...

class DOPComputer:
    DOP_MIN_ELEVATION: typing.ClassVar[float] = ...
    def compute(self, absoluteDate: org.orekit.time.AbsoluteDate, list: java.util.List[org.orekit.propagation.Propagator]) -> DOP: ...
    @staticmethod
    def create(oneAxisEllipsoid: org.orekit.bodies.OneAxisEllipsoid, geodeticPoint: org.orekit.bodies.GeodeticPoint) -> 'DOPComputer': ...
    def getElevationMask(self) -> org.orekit.utils.ElevationMask: ...
    def getMinElevation(self) -> float: ...
    def withElevationMask(self, elevationMask: org.orekit.utils.ElevationMask) -> 'DOPComputer': ...
    def withMinElevation(self, double: float) -> 'DOPComputer': ...

class IGSUtils:
    @staticmethod
    def frameName(frame: org.orekit.frames.Frame) -> str: ...
    @typing.overload
    @staticmethod
    def guessFrame(string: str) -> org.orekit.frames.Frame: ...
    @typing.overload
    @staticmethod
    def guessFrame(frames: org.orekit.frames.Frames, string: str) -> org.orekit.frames.Frame: ...

class MeasurementType(java.lang.Enum['MeasurementType']):
    PSEUDO_RANGE: typing.ClassVar['MeasurementType'] = ...
    CARRIER_PHASE: typing.ClassVar['MeasurementType'] = ...
    DOPPLER: typing.ClassVar['MeasurementType'] = ...
    SIGNAL_STRENGTH: typing.ClassVar['MeasurementType'] = ...
    COMBINED_RANGE_PHASE: typing.ClassVar['MeasurementType'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'MeasurementType': ...
    @staticmethod
    def values() -> typing.List['MeasurementType']: ...

class ObservationTimeScale(java.lang.Enum['ObservationTimeScale']):
    GPS: typing.ClassVar['ObservationTimeScale'] = ...
    GAL: typing.ClassVar['ObservationTimeScale'] = ...
    GLO: typing.ClassVar['ObservationTimeScale'] = ...
    QZS: typing.ClassVar['ObservationTimeScale'] = ...
    BDT: typing.ClassVar['ObservationTimeScale'] = ...
    IRN: typing.ClassVar['ObservationTimeScale'] = ...
    def getTimeScale(self, timeScales: org.orekit.time.TimeScales) -> org.orekit.time.TimeScale: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'ObservationTimeScale': ...
    @staticmethod
    def values() -> typing.List['ObservationTimeScale']: ...

class ObservationType(java.lang.Enum['ObservationType']):
    C1: typing.ClassVar['ObservationType'] = ...
    C2: typing.ClassVar['ObservationType'] = ...
    C5: typing.ClassVar['ObservationType'] = ...
    C6: typing.ClassVar['ObservationType'] = ...
    C7: typing.ClassVar['ObservationType'] = ...
    C8: typing.ClassVar['ObservationType'] = ...
    P1: typing.ClassVar['ObservationType'] = ...
    P2: typing.ClassVar['ObservationType'] = ...
    L1: typing.ClassVar['ObservationType'] = ...
    L2: typing.ClassVar['ObservationType'] = ...
    L5: typing.ClassVar['ObservationType'] = ...
    L6: typing.ClassVar['ObservationType'] = ...
    L7: typing.ClassVar['ObservationType'] = ...
    L8: typing.ClassVar['ObservationType'] = ...
    LA: typing.ClassVar['ObservationType'] = ...
    LB: typing.ClassVar['ObservationType'] = ...
    LC: typing.ClassVar['ObservationType'] = ...
    LD: typing.ClassVar['ObservationType'] = ...
    D1: typing.ClassVar['ObservationType'] = ...
    D2: typing.ClassVar['ObservationType'] = ...
    D5: typing.ClassVar['ObservationType'] = ...
    D6: typing.ClassVar['ObservationType'] = ...
    D7: typing.ClassVar['ObservationType'] = ...
    D8: typing.ClassVar['ObservationType'] = ...
    S1: typing.ClassVar['ObservationType'] = ...
    S2: typing.ClassVar['ObservationType'] = ...
    S5: typing.ClassVar['ObservationType'] = ...
    S6: typing.ClassVar['ObservationType'] = ...
    S7: typing.ClassVar['ObservationType'] = ...
    S8: typing.ClassVar['ObservationType'] = ...
    C1A: typing.ClassVar['ObservationType'] = ...
    C1B: typing.ClassVar['ObservationType'] = ...
    C1C: typing.ClassVar['ObservationType'] = ...
    C1D: typing.ClassVar['ObservationType'] = ...
    C1E: typing.ClassVar['ObservationType'] = ...
    C1I: typing.ClassVar['ObservationType'] = ...
    C1L: typing.ClassVar['ObservationType'] = ...
    C1M: typing.ClassVar['ObservationType'] = ...
    C1P: typing.ClassVar['ObservationType'] = ...
    C1Q: typing.ClassVar['ObservationType'] = ...
    C1S: typing.ClassVar['ObservationType'] = ...
    C1W: typing.ClassVar['ObservationType'] = ...
    C1X: typing.ClassVar['ObservationType'] = ...
    C1Y: typing.ClassVar['ObservationType'] = ...
    C1Z: typing.ClassVar['ObservationType'] = ...
    C2C: typing.ClassVar['ObservationType'] = ...
    C2D: typing.ClassVar['ObservationType'] = ...
    C2I: typing.ClassVar['ObservationType'] = ...
    C2L: typing.ClassVar['ObservationType'] = ...
    C2M: typing.ClassVar['ObservationType'] = ...
    C2P: typing.ClassVar['ObservationType'] = ...
    C2Q: typing.ClassVar['ObservationType'] = ...
    C2S: typing.ClassVar['ObservationType'] = ...
    C2W: typing.ClassVar['ObservationType'] = ...
    C2X: typing.ClassVar['ObservationType'] = ...
    C2Y: typing.ClassVar['ObservationType'] = ...
    C3I: typing.ClassVar['ObservationType'] = ...
    C3Q: typing.ClassVar['ObservationType'] = ...
    C3X: typing.ClassVar['ObservationType'] = ...
    C4A: typing.ClassVar['ObservationType'] = ...
    C4B: typing.ClassVar['ObservationType'] = ...
    C4X: typing.ClassVar['ObservationType'] = ...
    C5A: typing.ClassVar['ObservationType'] = ...
    C5B: typing.ClassVar['ObservationType'] = ...
    C5C: typing.ClassVar['ObservationType'] = ...
    C5D: typing.ClassVar['ObservationType'] = ...
    C5I: typing.ClassVar['ObservationType'] = ...
    C5P: typing.ClassVar['ObservationType'] = ...
    C5Q: typing.ClassVar['ObservationType'] = ...
    C5X: typing.ClassVar['ObservationType'] = ...
    C5Z: typing.ClassVar['ObservationType'] = ...
    C6A: typing.ClassVar['ObservationType'] = ...
    C6B: typing.ClassVar['ObservationType'] = ...
    C6C: typing.ClassVar['ObservationType'] = ...
    C6D: typing.ClassVar['ObservationType'] = ...
    C6E: typing.ClassVar['ObservationType'] = ...
    C6I: typing.ClassVar['ObservationType'] = ...
    C6L: typing.ClassVar['ObservationType'] = ...
    C6P: typing.ClassVar['ObservationType'] = ...
    C6Q: typing.ClassVar['ObservationType'] = ...
    C6S: typing.ClassVar['ObservationType'] = ...
    C6X: typing.ClassVar['ObservationType'] = ...
    C6Z: typing.ClassVar['ObservationType'] = ...
    C7D: typing.ClassVar['ObservationType'] = ...
    C7I: typing.ClassVar['ObservationType'] = ...
    C7P: typing.ClassVar['ObservationType'] = ...
    C7Q: typing.ClassVar['ObservationType'] = ...
    C7X: typing.ClassVar['ObservationType'] = ...
    C7Z: typing.ClassVar['ObservationType'] = ...
    C8D: typing.ClassVar['ObservationType'] = ...
    C8I: typing.ClassVar['ObservationType'] = ...
    C8P: typing.ClassVar['ObservationType'] = ...
    C8Q: typing.ClassVar['ObservationType'] = ...
    C8X: typing.ClassVar['ObservationType'] = ...
    C9A: typing.ClassVar['ObservationType'] = ...
    C9B: typing.ClassVar['ObservationType'] = ...
    C9C: typing.ClassVar['ObservationType'] = ...
    C9X: typing.ClassVar['ObservationType'] = ...
    C0: typing.ClassVar['ObservationType'] = ...
    CA: typing.ClassVar['ObservationType'] = ...
    CB: typing.ClassVar['ObservationType'] = ...
    CC: typing.ClassVar['ObservationType'] = ...
    CD: typing.ClassVar['ObservationType'] = ...
    D1A: typing.ClassVar['ObservationType'] = ...
    D1B: typing.ClassVar['ObservationType'] = ...
    D1C: typing.ClassVar['ObservationType'] = ...
    D1D: typing.ClassVar['ObservationType'] = ...
    D1E: typing.ClassVar['ObservationType'] = ...
    D1I: typing.ClassVar['ObservationType'] = ...
    D1L: typing.ClassVar['ObservationType'] = ...
    D1M: typing.ClassVar['ObservationType'] = ...
    D1N: typing.ClassVar['ObservationType'] = ...
    D1P: typing.ClassVar['ObservationType'] = ...
    D1S: typing.ClassVar['ObservationType'] = ...
    D1W: typing.ClassVar['ObservationType'] = ...
    D1X: typing.ClassVar['ObservationType'] = ...
    D1Y: typing.ClassVar['ObservationType'] = ...
    D1Z: typing.ClassVar['ObservationType'] = ...
    D2C: typing.ClassVar['ObservationType'] = ...
    D2D: typing.ClassVar['ObservationType'] = ...
    D2I: typing.ClassVar['ObservationType'] = ...
    D2L: typing.ClassVar['ObservationType'] = ...
    D2M: typing.ClassVar['ObservationType'] = ...
    D2N: typing.ClassVar['ObservationType'] = ...
    D2P: typing.ClassVar['ObservationType'] = ...
    D2Q: typing.ClassVar['ObservationType'] = ...
    D2S: typing.ClassVar['ObservationType'] = ...
    D2W: typing.ClassVar['ObservationType'] = ...
    D2X: typing.ClassVar['ObservationType'] = ...
    D2Y: typing.ClassVar['ObservationType'] = ...
    D3I: typing.ClassVar['ObservationType'] = ...
    D3Q: typing.ClassVar['ObservationType'] = ...
    D3X: typing.ClassVar['ObservationType'] = ...
    D4A: typing.ClassVar['ObservationType'] = ...
    D4B: typing.ClassVar['ObservationType'] = ...
    D4X: typing.ClassVar['ObservationType'] = ...
    D5A: typing.ClassVar['ObservationType'] = ...
    D5B: typing.ClassVar['ObservationType'] = ...
    D5C: typing.ClassVar['ObservationType'] = ...
    D5D: typing.ClassVar['ObservationType'] = ...
    D5I: typing.ClassVar['ObservationType'] = ...
    D5P: typing.ClassVar['ObservationType'] = ...
    D5Q: typing.ClassVar['ObservationType'] = ...
    D5X: typing.ClassVar['ObservationType'] = ...
    D5Z: typing.ClassVar['ObservationType'] = ...
    D6A: typing.ClassVar['ObservationType'] = ...
    D6B: typing.ClassVar['ObservationType'] = ...
    D6C: typing.ClassVar['ObservationType'] = ...
    D6D: typing.ClassVar['ObservationType'] = ...
    D6E: typing.ClassVar['ObservationType'] = ...
    D6I: typing.ClassVar['ObservationType'] = ...
    D6L: typing.ClassVar['ObservationType'] = ...
    D6P: typing.ClassVar['ObservationType'] = ...
    D6Q: typing.ClassVar['ObservationType'] = ...
    D6S: typing.ClassVar['ObservationType'] = ...
    D6X: typing.ClassVar['ObservationType'] = ...
    D6Z: typing.ClassVar['ObservationType'] = ...
    D7D: typing.ClassVar['ObservationType'] = ...
    D7I: typing.ClassVar['ObservationType'] = ...
    D7P: typing.ClassVar['ObservationType'] = ...
    D7Q: typing.ClassVar['ObservationType'] = ...
    D7X: typing.ClassVar['ObservationType'] = ...
    D7Z: typing.ClassVar['ObservationType'] = ...
    D8D: typing.ClassVar['ObservationType'] = ...
    D8I: typing.ClassVar['ObservationType'] = ...
    D8P: typing.ClassVar['ObservationType'] = ...
    D8Q: typing.ClassVar['ObservationType'] = ...
    D8X: typing.ClassVar['ObservationType'] = ...
    D9A: typing.ClassVar['ObservationType'] = ...
    D9B: typing.ClassVar['ObservationType'] = ...
    D9C: typing.ClassVar['ObservationType'] = ...
    D9X: typing.ClassVar['ObservationType'] = ...
    D0: typing.ClassVar['ObservationType'] = ...
    DA: typing.ClassVar['ObservationType'] = ...
    DB: typing.ClassVar['ObservationType'] = ...
    DC: typing.ClassVar['ObservationType'] = ...
    DD: typing.ClassVar['ObservationType'] = ...
    L1A: typing.ClassVar['ObservationType'] = ...
    L1B: typing.ClassVar['ObservationType'] = ...
    L1C: typing.ClassVar['ObservationType'] = ...
    L1D: typing.ClassVar['ObservationType'] = ...
    L1E: typing.ClassVar['ObservationType'] = ...
    L1I: typing.ClassVar['ObservationType'] = ...
    L1L: typing.ClassVar['ObservationType'] = ...
    L1M: typing.ClassVar['ObservationType'] = ...
    L1N: typing.ClassVar['ObservationType'] = ...
    L1P: typing.ClassVar['ObservationType'] = ...
    L1S: typing.ClassVar['ObservationType'] = ...
    L1W: typing.ClassVar['ObservationType'] = ...
    L1X: typing.ClassVar['ObservationType'] = ...
    L1Y: typing.ClassVar['ObservationType'] = ...
    L1Z: typing.ClassVar['ObservationType'] = ...
    L2C: typing.ClassVar['ObservationType'] = ...
    L2D: typing.ClassVar['ObservationType'] = ...
    L2I: typing.ClassVar['ObservationType'] = ...
    L2L: typing.ClassVar['ObservationType'] = ...
    L2M: typing.ClassVar['ObservationType'] = ...
    L2N: typing.ClassVar['ObservationType'] = ...
    L2P: typing.ClassVar['ObservationType'] = ...
    L2Q: typing.ClassVar['ObservationType'] = ...
    L2S: typing.ClassVar['ObservationType'] = ...
    L2W: typing.ClassVar['ObservationType'] = ...
    L2X: typing.ClassVar['ObservationType'] = ...
    L2Y: typing.ClassVar['ObservationType'] = ...
    L3I: typing.ClassVar['ObservationType'] = ...
    L3Q: typing.ClassVar['ObservationType'] = ...
    L3X: typing.ClassVar['ObservationType'] = ...
    L4A: typing.ClassVar['ObservationType'] = ...
    L4B: typing.ClassVar['ObservationType'] = ...
    L4X: typing.ClassVar['ObservationType'] = ...
    L5A: typing.ClassVar['ObservationType'] = ...
    L5B: typing.ClassVar['ObservationType'] = ...
    L5C: typing.ClassVar['ObservationType'] = ...
    L5D: typing.ClassVar['ObservationType'] = ...
    L5I: typing.ClassVar['ObservationType'] = ...
    L5P: typing.ClassVar['ObservationType'] = ...
    L5Q: typing.ClassVar['ObservationType'] = ...
    L5X: typing.ClassVar['ObservationType'] = ...
    L5Z: typing.ClassVar['ObservationType'] = ...
    L6A: typing.ClassVar['ObservationType'] = ...
    L6B: typing.ClassVar['ObservationType'] = ...
    L6C: typing.ClassVar['ObservationType'] = ...
    L6D: typing.ClassVar['ObservationType'] = ...
    L6E: typing.ClassVar['ObservationType'] = ...
    L6I: typing.ClassVar['ObservationType'] = ...
    L6L: typing.ClassVar['ObservationType'] = ...
    L6P: typing.ClassVar['ObservationType'] = ...
    L6Q: typing.ClassVar['ObservationType'] = ...
    L6S: typing.ClassVar['ObservationType'] = ...
    L6X: typing.ClassVar['ObservationType'] = ...
    L6Z: typing.ClassVar['ObservationType'] = ...
    L7D: typing.ClassVar['ObservationType'] = ...
    L7I: typing.ClassVar['ObservationType'] = ...
    L7P: typing.ClassVar['ObservationType'] = ...
    L7Q: typing.ClassVar['ObservationType'] = ...
    L7X: typing.ClassVar['ObservationType'] = ...
    L7Z: typing.ClassVar['ObservationType'] = ...
    L8D: typing.ClassVar['ObservationType'] = ...
    L8I: typing.ClassVar['ObservationType'] = ...
    L8P: typing.ClassVar['ObservationType'] = ...
    L8Q: typing.ClassVar['ObservationType'] = ...
    L8X: typing.ClassVar['ObservationType'] = ...
    L9A: typing.ClassVar['ObservationType'] = ...
    L9B: typing.ClassVar['ObservationType'] = ...
    L9C: typing.ClassVar['ObservationType'] = ...
    L9X: typing.ClassVar['ObservationType'] = ...
    L0: typing.ClassVar['ObservationType'] = ...
    S1A: typing.ClassVar['ObservationType'] = ...
    S1B: typing.ClassVar['ObservationType'] = ...
    S1C: typing.ClassVar['ObservationType'] = ...
    S1D: typing.ClassVar['ObservationType'] = ...
    S1E: typing.ClassVar['ObservationType'] = ...
    S1I: typing.ClassVar['ObservationType'] = ...
    S1L: typing.ClassVar['ObservationType'] = ...
    S1M: typing.ClassVar['ObservationType'] = ...
    S1N: typing.ClassVar['ObservationType'] = ...
    S1P: typing.ClassVar['ObservationType'] = ...
    S1S: typing.ClassVar['ObservationType'] = ...
    S1W: typing.ClassVar['ObservationType'] = ...
    S1X: typing.ClassVar['ObservationType'] = ...
    S1Y: typing.ClassVar['ObservationType'] = ...
    S1Z: typing.ClassVar['ObservationType'] = ...
    S2C: typing.ClassVar['ObservationType'] = ...
    S2D: typing.ClassVar['ObservationType'] = ...
    S2I: typing.ClassVar['ObservationType'] = ...
    S2L: typing.ClassVar['ObservationType'] = ...
    S2M: typing.ClassVar['ObservationType'] = ...
    S2N: typing.ClassVar['ObservationType'] = ...
    S2P: typing.ClassVar['ObservationType'] = ...
    S2Q: typing.ClassVar['ObservationType'] = ...
    S2S: typing.ClassVar['ObservationType'] = ...
    S2W: typing.ClassVar['ObservationType'] = ...
    S2X: typing.ClassVar['ObservationType'] = ...
    S2Y: typing.ClassVar['ObservationType'] = ...
    S3I: typing.ClassVar['ObservationType'] = ...
    S3Q: typing.ClassVar['ObservationType'] = ...
    S3X: typing.ClassVar['ObservationType'] = ...
    S4A: typing.ClassVar['ObservationType'] = ...
    S4B: typing.ClassVar['ObservationType'] = ...
    S4X: typing.ClassVar['ObservationType'] = ...
    S5A: typing.ClassVar['ObservationType'] = ...
    S5B: typing.ClassVar['ObservationType'] = ...
    S5C: typing.ClassVar['ObservationType'] = ...
    S5D: typing.ClassVar['ObservationType'] = ...
    S5I: typing.ClassVar['ObservationType'] = ...
    S5P: typing.ClassVar['ObservationType'] = ...
    S5Q: typing.ClassVar['ObservationType'] = ...
    S5X: typing.ClassVar['ObservationType'] = ...
    S5Z: typing.ClassVar['ObservationType'] = ...
    S6A: typing.ClassVar['ObservationType'] = ...
    S6B: typing.ClassVar['ObservationType'] = ...
    S6C: typing.ClassVar['ObservationType'] = ...
    S6D: typing.ClassVar['ObservationType'] = ...
    S6E: typing.ClassVar['ObservationType'] = ...
    S6I: typing.ClassVar['ObservationType'] = ...
    S6L: typing.ClassVar['ObservationType'] = ...
    S6P: typing.ClassVar['ObservationType'] = ...
    S6Q: typing.ClassVar['ObservationType'] = ...
    S6S: typing.ClassVar['ObservationType'] = ...
    S6X: typing.ClassVar['ObservationType'] = ...
    S6Z: typing.ClassVar['ObservationType'] = ...
    S7D: typing.ClassVar['ObservationType'] = ...
    S7I: typing.ClassVar['ObservationType'] = ...
    S7P: typing.ClassVar['ObservationType'] = ...
    S7Q: typing.ClassVar['ObservationType'] = ...
    S7X: typing.ClassVar['ObservationType'] = ...
    S7Z: typing.ClassVar['ObservationType'] = ...
    S8D: typing.ClassVar['ObservationType'] = ...
    S8I: typing.ClassVar['ObservationType'] = ...
    S8P: typing.ClassVar['ObservationType'] = ...
    S8Q: typing.ClassVar['ObservationType'] = ...
    S8X: typing.ClassVar['ObservationType'] = ...
    S9A: typing.ClassVar['ObservationType'] = ...
    S9B: typing.ClassVar['ObservationType'] = ...
    S9C: typing.ClassVar['ObservationType'] = ...
    S9X: typing.ClassVar['ObservationType'] = ...
    S0: typing.ClassVar['ObservationType'] = ...
    SA: typing.ClassVar['ObservationType'] = ...
    SB: typing.ClassVar['ObservationType'] = ...
    SC: typing.ClassVar['ObservationType'] = ...
    SD: typing.ClassVar['ObservationType'] = ...
    def getFrequency(self, satelliteSystem: 'SatelliteSystem') -> 'Frequency': ...
    def getMeasurementType(self) -> MeasurementType: ...
    def getSignalCode(self) -> 'SignalCode': ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'ObservationType': ...
    @staticmethod
    def values() -> typing.List['ObservationType']: ...

class RadioWave:
    def getFrequency(self) -> float: ...
    def getWavelength(self) -> float: ...

class SEMParser(org.orekit.data.AbstractSelfFeedingLoader, org.orekit.data.DataLoader):
    @typing.overload
    def __init__(self, string: str): ...
    @typing.overload
    def __init__(self, string: str, dataProvidersManager: org.orekit.data.DataProvidersManager, timeScales: org.orekit.time.TimeScales): ...
    def getAlmanacs(self) -> java.util.List[org.orekit.propagation.analytical.gnss.data.GPSAlmanac]: ...
    def getPRNNumbers(self) -> java.util.List[int]: ...
    def getSupportedNames(self) -> str: ...
    @typing.overload
    def loadData(self) -> None: ...
    @typing.overload
    def loadData(self, inputStream: java.io.InputStream, string: str) -> None: ...
    def stillAcceptsData(self) -> bool: ...

class SatInSystem:
    def __init__(self, satelliteSystem: 'SatelliteSystem', int: int): ...
    def equals(self, object: typing.Any) -> bool: ...
    def getPRN(self) -> int: ...
    def getSystem(self) -> 'SatelliteSystem': ...
    def getTwoDigitsRinexPRN(self) -> int: ...
    def hashCode(self) -> int: ...

class SatelliteSystem(java.lang.Enum['SatelliteSystem']):
    USER_DEFINED_A: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_B: typing.ClassVar['SatelliteSystem'] = ...
    BEIDOU: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_D: typing.ClassVar['SatelliteSystem'] = ...
    GALILEO: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_F: typing.ClassVar['SatelliteSystem'] = ...
    GPS: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_H: typing.ClassVar['SatelliteSystem'] = ...
    IRNSS: typing.ClassVar['SatelliteSystem'] = ...
    QZSS: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_K: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_L: typing.ClassVar['SatelliteSystem'] = ...
    MIXED: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_N: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_O: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_P: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_Q: typing.ClassVar['SatelliteSystem'] = ...
    GLONASS: typing.ClassVar['SatelliteSystem'] = ...
    SBAS: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_T: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_U: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_V: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_W: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_X: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_Y: typing.ClassVar['SatelliteSystem'] = ...
    USER_DEFINED_Z: typing.ClassVar['SatelliteSystem'] = ...
    def getKey(self) -> str: ...
    def getObservationTimeScale(self) -> ObservationTimeScale: ...
    @staticmethod
    def parseSatelliteSystem(string: str) -> 'SatelliteSystem': ...
    @staticmethod
    def parseSatelliteSystemWithGPSDefault(string: str) -> 'SatelliteSystem': ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'SatelliteSystem': ...
    @staticmethod
    def values() -> typing.List['SatelliteSystem']: ...

class SignalCode(java.lang.Enum['SignalCode']):
    A: typing.ClassVar['SignalCode'] = ...
    B: typing.ClassVar['SignalCode'] = ...
    C: typing.ClassVar['SignalCode'] = ...
    D: typing.ClassVar['SignalCode'] = ...
    E: typing.ClassVar['SignalCode'] = ...
    I: typing.ClassVar['SignalCode'] = ...
    L: typing.ClassVar['SignalCode'] = ...
    M: typing.ClassVar['SignalCode'] = ...
    N: typing.ClassVar['SignalCode'] = ...
    P: typing.ClassVar['SignalCode'] = ...
    Q: typing.ClassVar['SignalCode'] = ...
    S: typing.ClassVar['SignalCode'] = ...
    W: typing.ClassVar['SignalCode'] = ...
    X: typing.ClassVar['SignalCode'] = ...
    Y: typing.ClassVar['SignalCode'] = ...
    Z: typing.ClassVar['SignalCode'] = ...
    CODELESS: typing.ClassVar['SignalCode'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'SignalCode': ...
    @staticmethod
    def values() -> typing.List['SignalCode']: ...

class TimeSystem(java.lang.Enum['TimeSystem']):
    GPS: typing.ClassVar['TimeSystem'] = ...
    GLONASS: typing.ClassVar['TimeSystem'] = ...
    GALILEO: typing.ClassVar['TimeSystem'] = ...
    TAI: typing.ClassVar['TimeSystem'] = ...
    UTC: typing.ClassVar['TimeSystem'] = ...
    QZSS: typing.ClassVar['TimeSystem'] = ...
    BEIDOU: typing.ClassVar['TimeSystem'] = ...
    IRNSS: typing.ClassVar['TimeSystem'] = ...
    SBAS: typing.ClassVar['TimeSystem'] = ...
    GMT: typing.ClassVar['TimeSystem'] = ...
    UNKNOWN: typing.ClassVar['TimeSystem'] = ...
    def getKey(self) -> str: ...
    def getTimeScale(self, timeScales: org.orekit.time.TimeScales) -> org.orekit.time.TimeScale: ...
    @staticmethod
    def parseOneLetterCode(string: str) -> 'TimeSystem': ...
    @staticmethod
    def parseTimeSystem(string: str) -> 'TimeSystem': ...
    @staticmethod
    def parseTwoLettersCode(string: str) -> 'TimeSystem': ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'TimeSystem': ...
    @staticmethod
    def values() -> typing.List['TimeSystem']: ...

class YUMAParser(org.orekit.data.AbstractSelfFeedingLoader, org.orekit.data.DataLoader):
    @typing.overload
    def __init__(self, string: str): ...
    @typing.overload
    def __init__(self, string: str, dataProvidersManager: org.orekit.data.DataProvidersManager, timeScales: org.orekit.time.TimeScales): ...
    def getAlmanacs(self) -> java.util.List[org.orekit.propagation.analytical.gnss.data.GPSAlmanac]: ...
    def getPRNNumbers(self) -> java.util.List[int]: ...
    def getSupportedNames(self) -> str: ...
    @typing.overload
    def loadData(self) -> None: ...
    @typing.overload
    def loadData(self, inputStream: java.io.InputStream, string: str) -> None: ...
    def stillAcceptsData(self) -> bool: ...

class GnssSignal(RadioWave):
    F0: typing.ClassVar[float] = ...
    def getRatio(self) -> float: ...

class PythonRadioWave(RadioWave):
    def __init__(self): ...
    def finalize(self) -> None: ...
    def getFrequency(self) -> float: ...
    def pythonDecRef(self) -> None: ...
    @typing.overload
    def pythonExtension(self) -> int: ...
    @typing.overload
    def pythonExtension(self, long: int) -> None: ...

class Frequency(java.lang.Enum['Frequency'], GnssSignal):
    G01: typing.ClassVar['Frequency'] = ...
    G02: typing.ClassVar['Frequency'] = ...
    G05: typing.ClassVar['Frequency'] = ...
    R01: typing.ClassVar['Frequency'] = ...
    R02: typing.ClassVar['Frequency'] = ...
    R03: typing.ClassVar['Frequency'] = ...
    R04: typing.ClassVar['Frequency'] = ...
    R06: typing.ClassVar['Frequency'] = ...
    E01: typing.ClassVar['Frequency'] = ...
    E05: typing.ClassVar['Frequency'] = ...
    E07: typing.ClassVar['Frequency'] = ...
    E08: typing.ClassVar['Frequency'] = ...
    E06: typing.ClassVar['Frequency'] = ...
    C01: typing.ClassVar['Frequency'] = ...
    C02: typing.ClassVar['Frequency'] = ...
    C05: typing.ClassVar['Frequency'] = ...
    C06: typing.ClassVar['Frequency'] = ...
    C07: typing.ClassVar['Frequency'] = ...
    C08: typing.ClassVar['Frequency'] = ...
    B01: typing.ClassVar['Frequency'] = ...
    B02: typing.ClassVar['Frequency'] = ...
    B03: typing.ClassVar['Frequency'] = ...
    B1C: typing.ClassVar['Frequency'] = ...
    B1A: typing.ClassVar['Frequency'] = ...
    B2A: typing.ClassVar['Frequency'] = ...
    B2B: typing.ClassVar['Frequency'] = ...
    B08: typing.ClassVar['Frequency'] = ...
    B3A: typing.ClassVar['Frequency'] = ...
    J01: typing.ClassVar['Frequency'] = ...
    J02: typing.ClassVar['Frequency'] = ...
    J05: typing.ClassVar['Frequency'] = ...
    J06: typing.ClassVar['Frequency'] = ...
    I05: typing.ClassVar['Frequency'] = ...
    I09: typing.ClassVar['Frequency'] = ...
    S01: typing.ClassVar['Frequency'] = ...
    S05: typing.ClassVar['Frequency'] = ...
    F0: typing.ClassVar[float] = ...
    def getFrequency(self) -> float: ...
    def getMHzFrequency(self) -> float: ...
    def getName(self) -> str: ...
    def getRatio(self) -> float: ...
    def getSatelliteSystem(self) -> SatelliteSystem: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'Frequency': ...
    @staticmethod
    def values() -> typing.List['Frequency']: ...

class PythonGnssSignal(GnssSignal):
    def __init__(self): ...
    def finalize(self) -> None: ...
    def getFrequency(self) -> float: ...
    def getRatio(self) -> float: ...
    def pythonDecRef(self) -> None: ...
    @typing.overload
    def pythonExtension(self) -> int: ...
    @typing.overload
    def pythonExtension(self, long: int) -> None: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.orekit.gnss")``.

    DOP: typing.Type[DOP]
    DOPComputer: typing.Type[DOPComputer]
    Frequency: typing.Type[Frequency]
    GnssSignal: typing.Type[GnssSignal]
    IGSUtils: typing.Type[IGSUtils]
    MeasurementType: typing.Type[MeasurementType]
    ObservationTimeScale: typing.Type[ObservationTimeScale]
    ObservationType: typing.Type[ObservationType]
    PythonGnssSignal: typing.Type[PythonGnssSignal]
    PythonRadioWave: typing.Type[PythonRadioWave]
    RadioWave: typing.Type[RadioWave]
    SEMParser: typing.Type[SEMParser]
    SatInSystem: typing.Type[SatInSystem]
    SatelliteSystem: typing.Type[SatelliteSystem]
    SignalCode: typing.Type[SignalCode]
    TimeSystem: typing.Type[TimeSystem]
    YUMAParser: typing.Type[YUMAParser]
    antenna: org.orekit.gnss.antenna.__module_protocol__
    attitude: org.orekit.gnss.attitude.__module_protocol__
    metric: org.orekit.gnss.metric.__module_protocol__
    rflink: org.orekit.gnss.rflink.__module_protocol__
