import org.orekit.gnss.metric.parser
import typing



class SubFrame:
    PREAMBLE_VALUE: typing.ClassVar[int] = ...
    @staticmethod
    def checkParity(int: int, int2: int) -> bool: ...
    def getAlert(self) -> int: ...
    def getAntiSpoofing(self) -> int: ...
    def getId(self) -> int: ...
    def getIntegrityStatus(self) -> int: ...
    def getMessage(self) -> int: ...
    def getPreamble(self) -> int: ...
    def getTow(self) -> int: ...
    def hasParityErrors(self) -> bool: ...
    @staticmethod
    def parse(encodedMessage: org.orekit.gnss.metric.parser.EncodedMessage) -> 'SubFrame': ...

class SubFrame1(SubFrame):
    def getAF0(self) -> float: ...
    def getAF1(self) -> float: ...
    def getAF2(self) -> float: ...
    def getCaOrPFlag(self) -> int: ...
    def getIODC(self) -> int: ...
    def getL2PDataFlag(self) -> int: ...
    def getReserved04(self) -> int: ...
    def getReserved05(self) -> int: ...
    def getReserved06(self) -> int: ...
    def getReserved07(self) -> int: ...
    def getSvHealth(self) -> int: ...
    def getTGD(self) -> int: ...
    def getTOC(self) -> int: ...
    def getUraIndex(self) -> int: ...
    def getWeekNumber(self) -> int: ...

class SubFrame2(SubFrame):
    def getAODO(self) -> int: ...
    def getCrs(self) -> float: ...
    def getCuc(self) -> float: ...
    def getCus(self) -> float: ...
    def getDeltaN(self) -> float: ...
    def getE(self) -> float: ...
    def getFitInterval(self) -> int: ...
    def getIODE(self) -> int: ...
    def getM0(self) -> float: ...
    def getSqrtA(self) -> float: ...
    def getToe(self) -> int: ...

class SubFrame3(SubFrame):
    def getCic(self) -> float: ...
    def getCis(self) -> float: ...
    def getCrc(self) -> float: ...
    def getI0(self) -> float: ...
    def getIDot(self) -> float: ...
    def getIODE(self) -> int: ...
    def getLowercaseOmega(self) -> float: ...
    def getOmegaDot(self) -> float: ...
    def getUppercaseOmega0(self) -> float: ...

class SubFrame45(SubFrame):
    def getDataId(self) -> int: ...
    def getSvId(self) -> int: ...

class SubFrame4A(SubFrame45):
    def getReserved03(self) -> int: ...
    def getReserved04(self) -> int: ...
    def getReserved05(self) -> int: ...
    def getReserved06(self) -> int: ...
    def getReserved07(self) -> int: ...
    def getReserved08(self) -> int: ...
    def getReserved10(self) -> int: ...
    def getReservedA09(self) -> int: ...
    def getReservedB09(self) -> int: ...

class SubFrame4B(SubFrame45):
    def getReserved03(self) -> int: ...
    def getReserved04(self) -> int: ...
    def getReserved05(self) -> int: ...
    def getReserved06(self) -> int: ...
    def getReserved07(self) -> int: ...
    def getReserved08(self) -> int: ...
    def getReserved09(self) -> int: ...
    def getReserved10(self) -> int: ...

class SubFrame4C(SubFrame45):
    NB_ERD: typing.ClassVar[int] = ...
    def getERD(self, int: int) -> int: ...

class SubFrame4D(SubFrame45):
    def getA0(self) -> float: ...
    def getA1(self) -> float: ...
    def getAlpha0(self) -> float: ...
    def getAlpha1(self) -> float: ...
    def getAlpha2(self) -> float: ...
    def getAlpha3(self) -> float: ...
    def getBeta0(self) -> float: ...
    def getBeta1(self) -> float: ...
    def getBeta2(self) -> float: ...
    def getBeta3(self) -> float: ...
    def getDeltaTLs(self) -> int: ...
    def getDeltaTLsf(self) -> int: ...
    def getDn(self) -> int: ...
    def getReserved10(self) -> int: ...
    def getTot(self) -> int: ...
    def getWeekNumberLsf(self) -> int: ...
    def getWeekNumberT(self) -> int: ...

class SubFrame4E(SubFrame45):
    NB_AS: typing.ClassVar[int] = ...
    NB_SVH: typing.ClassVar[int] = ...
    @typing.overload
    def getAntiSpoofing(self) -> int: ...
    @typing.overload
    def getAntiSpoofing(self, int: int) -> int: ...
    def getReserved10(self) -> int: ...
    def getReserved8(self) -> int: ...
    def getSvHealth(self, int: int) -> int: ...

class SubFrame5B(SubFrame45):
    def getReservedA10(self) -> int: ...
    def getReservedB10(self) -> int: ...
    def getSvHealth(self, int: int) -> int: ...
    def getTOA(self) -> int: ...
    def getWeekNumber(self) -> int: ...

class SubFrameAlmanac(SubFrame45):
    def getAF0(self) -> float: ...
    def getAF1(self) -> float: ...
    def getDeltai(self) -> float: ...
    def getE(self) -> float: ...
    def getLowercaseOmega(self) -> float: ...
    def getM0(self) -> float: ...
    def getOmegaDot(self) -> float: ...
    def getPRN(self) -> int: ...
    def getSqrtA(self) -> float: ...
    def getSvHealth(self) -> int: ...
    def getToaA(self) -> int: ...
    def getUppercaseOmega0(self) -> float: ...

class SubFrameDummyAlmanac(SubFrame45): ...

class SubFrame4A0(SubFrame4A): ...

class SubFrame4A1(SubFrame4A): ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.orekit.gnss.rflink.gps")``.

    SubFrame: typing.Type[SubFrame]
    SubFrame1: typing.Type[SubFrame1]
    SubFrame2: typing.Type[SubFrame2]
    SubFrame3: typing.Type[SubFrame3]
    SubFrame45: typing.Type[SubFrame45]
    SubFrame4A: typing.Type[SubFrame4A]
    SubFrame4A0: typing.Type[SubFrame4A0]
    SubFrame4A1: typing.Type[SubFrame4A1]
    SubFrame4B: typing.Type[SubFrame4B]
    SubFrame4C: typing.Type[SubFrame4C]
    SubFrame4D: typing.Type[SubFrame4D]
    SubFrame4E: typing.Type[SubFrame4E]
    SubFrame5B: typing.Type[SubFrame5B]
    SubFrameAlmanac: typing.Type[SubFrameAlmanac]
    SubFrameDummyAlmanac: typing.Type[SubFrameDummyAlmanac]
