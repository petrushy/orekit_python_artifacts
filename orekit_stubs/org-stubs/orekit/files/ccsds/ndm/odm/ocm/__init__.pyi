import java.lang
import java.util
import java.util.function
import org.hipparchus.geometry.euclidean.threed
import org.hipparchus.linear
import org.orekit.bodies
import org.orekit.data
import org.orekit.files.ccsds.definitions
import org.orekit.files.ccsds.ndm
import org.orekit.files.ccsds.ndm.odm
import org.orekit.files.ccsds.ndm.odm.oem
import org.orekit.files.ccsds.section
import org.orekit.files.ccsds.utils
import org.orekit.files.ccsds.utils.generation
import org.orekit.files.ccsds.utils.lexical
import org.orekit.files.general
import org.orekit.frames
import org.orekit.propagation
import org.orekit.propagation.sampling
import org.orekit.time
import org.orekit.utils
import org.orekit.utils.units
import typing



class EphemerisOcmWriter(org.orekit.files.general.EphemerisFileWriter):
    def __init__(self, ocmWriter: 'OcmWriter', odmHeader: org.orekit.files.ccsds.ndm.odm.OdmHeader, ocmMetadata: 'OcmMetadata', trajectoryStateHistoryMetadata: 'TrajectoryStateHistoryMetadata', fileFormat: org.orekit.files.ccsds.utils.FileFormat, string: str, double: float, int: int): ...
    _write_0__C = typing.TypeVar('_write_0__C', bound=org.orekit.utils.TimeStampedPVCoordinates)  # <C>
    _write_0__S = typing.TypeVar('_write_0__S', bound=org.orekit.files.general.EphemerisFile.EphemerisSegment)  # <S>
    _write_1__C = typing.TypeVar('_write_1__C', bound=org.orekit.utils.TimeStampedPVCoordinates)  # <C>
    _write_1__S = typing.TypeVar('_write_1__S', bound=org.orekit.files.general.EphemerisFile.EphemerisSegment)  # <S>
    @typing.overload
    def write(self, string: str, ephemerisFile: org.orekit.files.general.EphemerisFile[_write_0__C, _write_0__S]) -> None: ...
    @typing.overload
    def write(self, appendable: java.lang.Appendable, ephemerisFile: org.orekit.files.general.EphemerisFile[_write_1__C, _write_1__S]) -> None: ...

class ManBasis(java.lang.Enum['ManBasis']):
    CANDIDATE: typing.ClassVar['ManBasis'] = ...
    PLANNED: typing.ClassVar['ManBasis'] = ...
    ANTICIPATED: typing.ClassVar['ManBasis'] = ...
    DETERMINED_TLM: typing.ClassVar['ManBasis'] = ...
    DETERMINED_OD: typing.ClassVar['ManBasis'] = ...
    SIMULATED: typing.ClassVar['ManBasis'] = ...
    OTHER: typing.ClassVar['ManBasis'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'ManBasis': ...
    @staticmethod
    def values() -> typing.List['ManBasis']: ...

class ManeuverFieldType(java.lang.Enum['ManeuverFieldType']):
    TIME_ABSOLUTE: typing.ClassVar['ManeuverFieldType'] = ...
    TIME_RELATIVE: typing.ClassVar['ManeuverFieldType'] = ...
    MAN_DURA: typing.ClassVar['ManeuverFieldType'] = ...
    DELTA_MASS: typing.ClassVar['ManeuverFieldType'] = ...
    ACC_X: typing.ClassVar['ManeuverFieldType'] = ...
    ACC_Y: typing.ClassVar['ManeuverFieldType'] = ...
    ACC_Z: typing.ClassVar['ManeuverFieldType'] = ...
    ACC_INTERP: typing.ClassVar['ManeuverFieldType'] = ...
    ACC_MAG_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    ACC_DIR_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    DV_X: typing.ClassVar['ManeuverFieldType'] = ...
    DV_Y: typing.ClassVar['ManeuverFieldType'] = ...
    DV_Z: typing.ClassVar['ManeuverFieldType'] = ...
    DV_MAG_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    DV_DIR_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    THR_X: typing.ClassVar['ManeuverFieldType'] = ...
    THR_Y: typing.ClassVar['ManeuverFieldType'] = ...
    THR_Z: typing.ClassVar['ManeuverFieldType'] = ...
    THR_EFFIC: typing.ClassVar['ManeuverFieldType'] = ...
    THR_INTERP: typing.ClassVar['ManeuverFieldType'] = ...
    THR_ISP: typing.ClassVar['ManeuverFieldType'] = ...
    THR_MAG_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    THR_DIR_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_ID: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DV_X: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DV_Y: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DV_Z: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_MASS: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DV_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DIR_SIGMA: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DV_RATIO: typing.ClassVar['ManeuverFieldType'] = ...
    DEPLOY_DV_CDA: typing.ClassVar['ManeuverFieldType'] = ...
    def checkUnit(self, unit: org.orekit.utils.units.Unit) -> None: ...
    def getUnit(self) -> org.orekit.utils.units.Unit: ...
    def isTime(self) -> bool: ...
    def outputField(self, timeConverter: org.orekit.files.ccsds.definitions.TimeConverter, orbitManeuver: 'OrbitManeuver') -> str: ...
    def process(self, string: str, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, orbitManeuver: 'OrbitManeuver', int: int, string2: str) -> None: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'ManeuverFieldType': ...
    @staticmethod
    def values() -> typing.List['ManeuverFieldType']: ...

class ObjectType(java.lang.Enum['ObjectType']):
    PAYLOAD: typing.ClassVar['ObjectType'] = ...
    ROCKET_BODY: typing.ClassVar['ObjectType'] = ...
    DEBRIS: typing.ClassVar['ObjectType'] = ...
    UNKNOWN: typing.ClassVar['ObjectType'] = ...
    OTHER: typing.ClassVar['ObjectType'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'ObjectType': ...
    @staticmethod
    def values() -> typing.List['ObjectType']: ...

class Ocm(org.orekit.files.ccsds.ndm.NdmConstituent[org.orekit.files.ccsds.ndm.odm.OdmHeader, org.orekit.files.ccsds.section.Segment['OcmMetadata', 'OcmData']], org.orekit.files.general.EphemerisFile[org.orekit.utils.TimeStampedPVCoordinates, 'TrajectoryStateHistory']):
    ROOT: typing.ClassVar[str] = ...
    FORMAT_VERSION_KEY: typing.ClassVar[str] = ...
    TRAJ_LINE: typing.ClassVar[str] = ...
    COV_LINE: typing.ClassVar[str] = ...
    MAN_LINE: typing.ClassVar[str] = ...
    UNKNOWN_OBJECT: typing.ClassVar[str] = ...
    def __init__(self, odmHeader: org.orekit.files.ccsds.ndm.odm.OdmHeader, list: java.util.List[org.orekit.files.ccsds.section.Segment['OcmMetadata', 'OcmData']], iERSConventions: org.orekit.utils.IERSConventions, dataContext: org.orekit.data.DataContext, double: float): ...
    def getData(self) -> 'OcmData': ...
    def getMetadata(self) -> 'OcmMetadata': ...
    def getSatellites(self) -> java.util.Map[str, 'OcmSatelliteEphemeris']: ...

class OcmData(org.orekit.files.ccsds.section.Data):
    def __init__(self, list: java.util.List['TrajectoryStateHistory'], orbitPhysicalProperties: 'OrbitPhysicalProperties', list2: java.util.List['OrbitCovarianceHistory'], list3: java.util.List['OrbitManeuverHistory'], perturbations: 'Perturbations', orbitDetermination: 'OrbitDetermination', userDefined: org.orekit.files.ccsds.ndm.odm.UserDefined): ...
    def getCovarianceBlocks(self) -> java.util.List['OrbitCovarianceHistory']: ...
    def getManeuverBlocks(self) -> java.util.List['OrbitManeuverHistory']: ...
    def getOrbitDeterminationBlock(self) -> 'OrbitDetermination': ...
    def getPerturbationsBlock(self) -> 'Perturbations': ...
    def getPhysicBlock(self) -> 'OrbitPhysicalProperties': ...
    def getTrajectoryBlocks(self) -> java.util.List['TrajectoryStateHistory']: ...
    def getUserDefinedBlock(self) -> org.orekit.files.ccsds.ndm.odm.UserDefined: ...
    def validate(self, double: float) -> None: ...

class OcmDataSubStructureKey(java.lang.Enum['OcmDataSubStructureKey']):
    TRAJ: typing.ClassVar['OcmDataSubStructureKey'] = ...
    traj: typing.ClassVar['OcmDataSubStructureKey'] = ...
    PHYS: typing.ClassVar['OcmDataSubStructureKey'] = ...
    phys: typing.ClassVar['OcmDataSubStructureKey'] = ...
    COV: typing.ClassVar['OcmDataSubStructureKey'] = ...
    cov: typing.ClassVar['OcmDataSubStructureKey'] = ...
    MAN: typing.ClassVar['OcmDataSubStructureKey'] = ...
    man: typing.ClassVar['OcmDataSubStructureKey'] = ...
    PERT: typing.ClassVar['OcmDataSubStructureKey'] = ...
    pert: typing.ClassVar['OcmDataSubStructureKey'] = ...
    OD: typing.ClassVar['OcmDataSubStructureKey'] = ...
    od: typing.ClassVar['OcmDataSubStructureKey'] = ...
    USER: typing.ClassVar['OcmDataSubStructureKey'] = ...
    user: typing.ClassVar['OcmDataSubStructureKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, ocmParser: 'OcmParser') -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OcmDataSubStructureKey': ...
    @staticmethod
    def values() -> typing.List['OcmDataSubStructureKey']: ...

class OcmElements(java.lang.Enum['OcmElements']):
    ORB: typing.ClassVar['OcmElements'] = ...
    PHYS: typing.ClassVar['OcmElements'] = ...
    COV: typing.ClassVar['OcmElements'] = ...
    MAN: typing.ClassVar['OcmElements'] = ...
    PERT: typing.ClassVar['OcmElements'] = ...
    OD: typing.ClassVar['OcmElements'] = ...
    USER: typing.ClassVar['OcmElements'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OcmElements': ...
    @staticmethod
    def values() -> typing.List['OcmElements']: ...

class OcmMetadata(org.orekit.files.ccsds.ndm.odm.OdmMetadata):
    DEFAULT_SCLK_OFFSET_AT_EPOCH: typing.ClassVar[float] = ...
    DEFAULT_SCLK_SEC_PER_SI_SEC: typing.ClassVar[float] = ...
    def __init__(self, dataContext: org.orekit.data.DataContext): ...
    def copy(self, double: float) -> 'OcmMetadata': ...
    def getAdmMessageLink(self) -> str: ...
    def getAlternateNames(self) -> java.util.List[str]: ...
    def getCatalogName(self) -> str: ...
    def getCdmMessageLink(self) -> str: ...
    def getCelestialSource(self) -> str: ...
    def getConstellation(self) -> str: ...
    def getCountry(self) -> str: ...
    def getEopSource(self) -> str: ...
    def getEpochT0(self) -> org.orekit.time.AbsoluteDate: ...
    def getInternationalDesignator(self) -> str: ...
    def getInterpMethodEOP(self) -> str: ...
    def getNextLeapEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getNextLeapTaimutc(self) -> float: ...
    def getNextMessageEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getNextMessageID(self) -> str: ...
    def getObjectDesignator(self) -> str: ...
    def getObjectType(self) -> ObjectType: ...
    def getOcmDataElements(self) -> java.util.List[OcmElements]: ...
    def getOperator(self) -> str: ...
    def getOpsStatus(self) -> 'OpsStatus': ...
    def getOrbitCategory(self) -> 'OrbitCategory': ...
    def getOriginatorAddress(self) -> str: ...
    def getOriginatorEmail(self) -> str: ...
    def getOriginatorPOC(self) -> str: ...
    def getOriginatorPhone(self) -> str: ...
    def getOriginatorPosition(self) -> str: ...
    def getOwner(self) -> str: ...
    def getPreviousMessageEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getPreviousMessageID(self) -> str: ...
    def getPrmMessageLink(self) -> str: ...
    def getRdmMessageLink(self) -> str: ...
    def getSclkOffsetAtEpoch(self) -> float: ...
    def getSclkSecPerSISec(self) -> float: ...
    def getStartTime(self) -> org.orekit.time.AbsoluteDate: ...
    def getStopTime(self) -> org.orekit.time.AbsoluteDate: ...
    def getTaimutcT0(self) -> float: ...
    def getTdmMessageLink(self) -> str: ...
    def getTechAddress(self) -> str: ...
    def getTechEmail(self) -> str: ...
    def getTechOrg(self) -> str: ...
    def getTechPOC(self) -> str: ...
    def getTechPhone(self) -> str: ...
    def getTechPosition(self) -> str: ...
    def getTimeSpan(self) -> float: ...
    def getUt1mutcT0(self) -> float: ...
    def setAdmMessageLink(self, string: str) -> None: ...
    def setAlternateNames(self, list: java.util.List[str]) -> None: ...
    def setCatalogName(self, string: str) -> None: ...
    def setCdmMessageLink(self, string: str) -> None: ...
    def setCelestialSource(self, string: str) -> None: ...
    def setConstellation(self, string: str) -> None: ...
    def setCountry(self, string: str) -> None: ...
    def setEopSource(self, string: str) -> None: ...
    def setEpochT0(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setInternationalDesignator(self, string: str) -> None: ...
    def setInterpMethodEOP(self, string: str) -> None: ...
    def setNextLeapEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setNextLeapTaimutc(self, double: float) -> None: ...
    def setNextMessageEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setNextMessageID(self, string: str) -> None: ...
    def setObjectDesignator(self, string: str) -> None: ...
    def setObjectType(self, objectType: ObjectType) -> None: ...
    def setOcmDataElements(self, list: java.util.List[OcmElements]) -> None: ...
    def setOperator(self, string: str) -> None: ...
    def setOpsStatus(self, opsStatus: 'OpsStatus') -> None: ...
    def setOrbitCategory(self, orbitCategory: 'OrbitCategory') -> None: ...
    def setOriginatorAddress(self, string: str) -> None: ...
    def setOriginatorEmail(self, string: str) -> None: ...
    def setOriginatorPOC(self, string: str) -> None: ...
    def setOriginatorPhone(self, string: str) -> None: ...
    def setOriginatorPosition(self, string: str) -> None: ...
    def setOwner(self, string: str) -> None: ...
    def setPreviousMessageEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setPreviousMessageID(self, string: str) -> None: ...
    def setPrmMessageLink(self, string: str) -> None: ...
    def setRdmMessageLink(self, string: str) -> None: ...
    def setSclkOffsetAtEpoch(self, double: float) -> None: ...
    def setSclkSecPerSISec(self, double: float) -> None: ...
    def setStartTime(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setStopTime(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setTaimutcT0(self, double: float) -> None: ...
    def setTdmMessageLink(self, string: str) -> None: ...
    def setTechAddress(self, string: str) -> None: ...
    def setTechEmail(self, string: str) -> None: ...
    def setTechOrg(self, string: str) -> None: ...
    def setTechPOC(self, string: str) -> None: ...
    def setTechPhone(self, string: str) -> None: ...
    def setTechPosition(self, string: str) -> None: ...
    def setTimeSpan(self, double: float) -> None: ...
    def setUt1mutcT0(self, double: float) -> None: ...
    def validate(self, double: float) -> None: ...

class OcmMetadataKey(java.lang.Enum['OcmMetadataKey']):
    INTERNATIONAL_DESIGNATOR: typing.ClassVar['OcmMetadataKey'] = ...
    CATALOG_NAME: typing.ClassVar['OcmMetadataKey'] = ...
    OBJECT_DESIGNATOR: typing.ClassVar['OcmMetadataKey'] = ...
    ALTERNATE_NAMES: typing.ClassVar['OcmMetadataKey'] = ...
    ORIGINATOR_POC: typing.ClassVar['OcmMetadataKey'] = ...
    ORIGINATOR_POSITION: typing.ClassVar['OcmMetadataKey'] = ...
    ORIGINATOR_PHONE: typing.ClassVar['OcmMetadataKey'] = ...
    ORIGINATOR_EMAIL: typing.ClassVar['OcmMetadataKey'] = ...
    ORIGINATOR_ADDRESS: typing.ClassVar['OcmMetadataKey'] = ...
    TECH_ORG: typing.ClassVar['OcmMetadataKey'] = ...
    TECH_POC: typing.ClassVar['OcmMetadataKey'] = ...
    TECH_POSITION: typing.ClassVar['OcmMetadataKey'] = ...
    TECH_PHONE: typing.ClassVar['OcmMetadataKey'] = ...
    TECH_EMAIL: typing.ClassVar['OcmMetadataKey'] = ...
    TECH_ADDRESS: typing.ClassVar['OcmMetadataKey'] = ...
    PREVIOUS_MESSAGE_ID: typing.ClassVar['OcmMetadataKey'] = ...
    NEXT_MESSAGE_ID: typing.ClassVar['OcmMetadataKey'] = ...
    ADM_MSG_LINK: typing.ClassVar['OcmMetadataKey'] = ...
    CDM_MSG_LINK: typing.ClassVar['OcmMetadataKey'] = ...
    PRM_MSG_LINK: typing.ClassVar['OcmMetadataKey'] = ...
    RDM_MSG_LINK: typing.ClassVar['OcmMetadataKey'] = ...
    TDM_MSG_LINK: typing.ClassVar['OcmMetadataKey'] = ...
    OPERATOR: typing.ClassVar['OcmMetadataKey'] = ...
    OWNER: typing.ClassVar['OcmMetadataKey'] = ...
    COUNTRY: typing.ClassVar['OcmMetadataKey'] = ...
    CONSTELLATION: typing.ClassVar['OcmMetadataKey'] = ...
    OBJECT_TYPE: typing.ClassVar['OcmMetadataKey'] = ...
    EPOCH_TZERO: typing.ClassVar['OcmMetadataKey'] = ...
    OPS_STATUS: typing.ClassVar['OcmMetadataKey'] = ...
    ORBIT_CATEGORY: typing.ClassVar['OcmMetadataKey'] = ...
    OCM_DATA_ELEMENTS: typing.ClassVar['OcmMetadataKey'] = ...
    SCLK_OFFSET_AT_EPOCH: typing.ClassVar['OcmMetadataKey'] = ...
    SCLK_SEC_PER_SI_SEC: typing.ClassVar['OcmMetadataKey'] = ...
    PREVIOUS_MESSAGE_EPOCH: typing.ClassVar['OcmMetadataKey'] = ...
    NEXT_MESSAGE_EPOCH: typing.ClassVar['OcmMetadataKey'] = ...
    START_TIME: typing.ClassVar['OcmMetadataKey'] = ...
    STOP_TIME: typing.ClassVar['OcmMetadataKey'] = ...
    TIME_SPAN: typing.ClassVar['OcmMetadataKey'] = ...
    TAIMUTC_AT_TZERO: typing.ClassVar['OcmMetadataKey'] = ...
    NEXT_LEAP_EPOCH: typing.ClassVar['OcmMetadataKey'] = ...
    NEXT_LEAP_TAIMUTC: typing.ClassVar['OcmMetadataKey'] = ...
    UT1MUTC_AT_TZERO: typing.ClassVar['OcmMetadataKey'] = ...
    EOP_SOURCE: typing.ClassVar['OcmMetadataKey'] = ...
    INTERP_METHOD_EOP: typing.ClassVar['OcmMetadataKey'] = ...
    CELESTIAL_SOURCE: typing.ClassVar['OcmMetadataKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, ocmMetadata: OcmMetadata) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OcmMetadataKey': ...
    @staticmethod
    def values() -> typing.List['OcmMetadataKey']: ...

class OcmParser(org.orekit.files.ccsds.ndm.odm.OdmParser[Ocm, 'OcmParser'], org.orekit.files.general.EphemerisFileParser[Ocm]):
    def __init__(self, iERSConventions: org.orekit.utils.IERSConventions, double: float, double2: float, boolean: bool, dataContext: org.orekit.data.DataContext, double3: float, parsedUnitsBehavior: org.orekit.files.ccsds.ndm.ParsedUnitsBehavior, functionArray: typing.List[java.util.function.Function[org.orekit.files.ccsds.utils.lexical.ParseToken, java.util.List[org.orekit.files.ccsds.utils.lexical.ParseToken]]]): ...
    def build(self) -> Ocm: ...
    def finalizeData(self) -> bool: ...
    def finalizeHeader(self) -> bool: ...
    def finalizeMetadata(self) -> bool: ...
    def getHeader(self) -> org.orekit.files.ccsds.ndm.odm.OdmHeader: ...
    def getSpecialXmlElementsBuilders(self) -> java.util.Map[str, org.orekit.files.ccsds.utils.lexical.XmlTokenBuilder]: ...
    def inData(self) -> bool: ...
    def inHeader(self) -> bool: ...
    def inMetadata(self) -> bool: ...
    def parse(self, dataSource: org.orekit.data.DataSource) -> Ocm: ...
    def prepareData(self) -> bool: ...
    def prepareHeader(self) -> bool: ...
    def prepareMetadata(self) -> bool: ...
    def reset(self, fileFormat: org.orekit.files.ccsds.utils.FileFormat) -> None: ...

class OcmSatelliteEphemeris(org.orekit.files.general.EphemerisFile.SatelliteEphemeris[org.orekit.utils.TimeStampedPVCoordinates, 'TrajectoryStateHistory']):
    def __init__(self, string: str, double: float, list: java.util.List['TrajectoryStateHistory']): ...
    def getId(self) -> str: ...
    def getMu(self) -> float: ...
    def getSegments(self) -> java.util.List['TrajectoryStateHistory']: ...
    def getStart(self) -> org.orekit.time.AbsoluteDate: ...
    def getStop(self) -> org.orekit.time.AbsoluteDate: ...

class OcmWriter(org.orekit.files.ccsds.utils.generation.AbstractMessageWriter[org.orekit.files.ccsds.ndm.odm.OdmHeader, org.orekit.files.ccsds.section.Segment[OcmMetadata, OcmData], Ocm]):
    CCSDS_OCM_VERS: typing.ClassVar[float] = ...
    KVN_PADDING_WIDTH: typing.ClassVar[int] = ...
    def __init__(self, iERSConventions: org.orekit.utils.IERSConventions, double: float, double2: float, dataContext: org.orekit.data.DataContext): ...
    def getEquatorialRadius(self) -> float: ...
    def getFlattening(self) -> float: ...

class OpsStatus(java.lang.Enum['OpsStatus']):
    OPERATIONAL: typing.ClassVar['OpsStatus'] = ...
    NONOPERATIONAL: typing.ClassVar['OpsStatus'] = ...
    PARTIALLY_OPERATIONAL: typing.ClassVar['OpsStatus'] = ...
    BACKUP: typing.ClassVar['OpsStatus'] = ...
    STANBY: typing.ClassVar['OpsStatus'] = ...
    EXTENDED_MISSION: typing.ClassVar['OpsStatus'] = ...
    REENTRY_MODE: typing.ClassVar['OpsStatus'] = ...
    DECAYED: typing.ClassVar['OpsStatus'] = ...
    UNKNOWN: typing.ClassVar['OpsStatus'] = ...
    def toString(self) -> str: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OpsStatus': ...
    @staticmethod
    def values() -> typing.List['OpsStatus']: ...

class OrbitCategory(java.lang.Enum['OrbitCategory']):
    EGO: typing.ClassVar['OrbitCategory'] = ...
    ESO: typing.ClassVar['OrbitCategory'] = ...
    GHO: typing.ClassVar['OrbitCategory'] = ...
    GEO: typing.ClassVar['OrbitCategory'] = ...
    GSO: typing.ClassVar['OrbitCategory'] = ...
    GTO: typing.ClassVar['OrbitCategory'] = ...
    HAO: typing.ClassVar['OrbitCategory'] = ...
    HEO: typing.ClassVar['OrbitCategory'] = ...
    IGO: typing.ClassVar['OrbitCategory'] = ...
    LEO: typing.ClassVar['OrbitCategory'] = ...
    LMO: typing.ClassVar['OrbitCategory'] = ...
    MEO: typing.ClassVar['OrbitCategory'] = ...
    MGO: typing.ClassVar['OrbitCategory'] = ...
    NSO: typing.ClassVar['OrbitCategory'] = ...
    UFO: typing.ClassVar['OrbitCategory'] = ...
    def toString(self) -> str: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OrbitCategory': ...
    @staticmethod
    def values() -> typing.List['OrbitCategory']: ...

class OrbitCovariance(org.orekit.time.TimeStamped):
    def __init__(self, orbitElementsType: 'OrbitElementsType', ordering: 'Ordering', absoluteDate: org.orekit.time.AbsoluteDate, stringArray: typing.List[str], int: int): ...
    def getDate(self) -> org.orekit.time.AbsoluteDate: ...
    def getMatrix(self) -> org.hipparchus.linear.RealMatrix: ...
    def getType(self) -> 'OrbitElementsType': ...

class OrbitCovarianceHistory:
    def __init__(self, orbitCovarianceHistoryMetadata: 'OrbitCovarianceHistoryMetadata', list: java.util.List[OrbitCovariance]): ...
    def getCovariances(self) -> java.util.List[OrbitCovariance]: ...
    def getMetadata(self) -> 'OrbitCovarianceHistoryMetadata': ...

class OrbitCovarianceHistoryMetadata(org.orekit.files.ccsds.section.CommentsContainer):
    def __init__(self, absoluteDate: org.orekit.time.AbsoluteDate): ...
    def getCovBasis(self) -> str: ...
    def getCovBasisID(self) -> str: ...
    def getCovConfidence(self) -> float: ...
    def getCovFrameEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getCovID(self) -> str: ...
    def getCovNextID(self) -> str: ...
    def getCovOrdering(self) -> 'Ordering': ...
    def getCovPrevID(self) -> str: ...
    def getCovReferenceFrame(self) -> org.orekit.files.ccsds.definitions.FrameFacade: ...
    def getCovScaleMax(self) -> float: ...
    def getCovScaleMin(self) -> float: ...
    def getCovType(self) -> 'OrbitElementsType': ...
    def getCovUnits(self) -> java.util.List[org.orekit.utils.units.Unit]: ...
    def setCovBasis(self, string: str) -> None: ...
    def setCovBasisID(self, string: str) -> None: ...
    def setCovConfidence(self, double: float) -> None: ...
    def setCovFrameEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setCovID(self, string: str) -> None: ...
    def setCovNextID(self, string: str) -> None: ...
    def setCovOrdering(self, ordering: 'Ordering') -> None: ...
    def setCovPrevID(self, string: str) -> None: ...
    def setCovReferenceFrame(self, frameFacade: org.orekit.files.ccsds.definitions.FrameFacade) -> None: ...
    def setCovScaleMax(self, double: float) -> None: ...
    def setCovScaleMin(self, double: float) -> None: ...
    def setCovType(self, orbitElementsType: 'OrbitElementsType') -> None: ...
    def setCovUnits(self, list: java.util.List[org.orekit.utils.units.Unit]) -> None: ...
    def validate(self, double: float) -> None: ...

class OrbitCovarianceHistoryMetadataKey(java.lang.Enum['OrbitCovarianceHistoryMetadataKey']):
    COMMENT: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_ID: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_PREV_ID: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_NEXT_ID: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_BASIS: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_BASIS_ID: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_REF_FRAME: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_FRAME_EPOCH: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_SCALE_MIN: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_SCALE_MAX: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_CONFIDENCE: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_TYPE: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_ORDERING: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    COV_UNITS: typing.ClassVar['OrbitCovarianceHistoryMetadataKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, orbitCovarianceHistoryMetadata: OrbitCovarianceHistoryMetadata) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OrbitCovarianceHistoryMetadataKey': ...
    @staticmethod
    def values() -> typing.List['OrbitCovarianceHistoryMetadataKey']: ...

class OrbitDetermination(org.orekit.files.ccsds.section.CommentsContainer):
    def __init__(self): ...
    def getActualOdSpan(self) -> float: ...
    def getConfidence(self) -> float: ...
    def getConsiderN(self) -> int: ...
    def getConsiderParameters(self) -> java.util.List[str]: ...
    def getDataTypes(self) -> java.util.List[str]: ...
    def getEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getEpochEigenInt(self) -> float: ...
    def getEpochEigenMaj(self) -> float: ...
    def getEpochEigenMin(self) -> float: ...
    def getGdop(self) -> float: ...
    def getId(self) -> str: ...
    def getMaxPredictedEigenMaj(self) -> float: ...
    def getMaximumObsGap(self) -> float: ...
    def getMethod(self) -> org.orekit.files.ccsds.definitions.OdMethodFacade: ...
    def getMinPredictedEigenMin(self) -> float: ...
    def getObsAvailable(self) -> int: ...
    def getObsUsed(self) -> int: ...
    def getPrevId(self) -> str: ...
    def getRecommendedOdSpan(self) -> float: ...
    def getSedr(self) -> float: ...
    def getSensors(self) -> java.util.List[str]: ...
    def getSensorsN(self) -> int: ...
    def getSolveN(self) -> int: ...
    def getSolveStates(self) -> java.util.List[str]: ...
    def getTimeSinceFirstObservation(self) -> float: ...
    def getTimeSinceLastObservation(self) -> float: ...
    def getTracksAvailable(self) -> int: ...
    def getTracksUsed(self) -> int: ...
    def getWeightedRms(self) -> float: ...
    def setActualOdSpan(self, double: float) -> None: ...
    def setConfidence(self, double: float) -> None: ...
    def setConsiderN(self, int: int) -> None: ...
    def setConsiderParameters(self, list: java.util.List[str]) -> None: ...
    def setDataTypes(self, list: java.util.List[str]) -> None: ...
    def setEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setEpochEigenInt(self, double: float) -> None: ...
    def setEpochEigenMaj(self, double: float) -> None: ...
    def setEpochEigenMin(self, double: float) -> None: ...
    def setGdop(self, double: float) -> None: ...
    def setId(self, string: str) -> None: ...
    def setMaxPredictedEigenMaj(self, double: float) -> None: ...
    def setMaximumObsGap(self, double: float) -> None: ...
    def setMethod(self, odMethodFacade: org.orekit.files.ccsds.definitions.OdMethodFacade) -> None: ...
    def setMinPredictedEigenMin(self, double: float) -> None: ...
    def setObsAvailable(self, int: int) -> None: ...
    def setObsUsed(self, int: int) -> None: ...
    def setPrevId(self, string: str) -> None: ...
    def setRecommendedOdSpan(self, double: float) -> None: ...
    def setSedr(self, double: float) -> None: ...
    def setSensors(self, list: java.util.List[str]) -> None: ...
    def setSensorsN(self, int: int) -> None: ...
    def setSolveN(self, int: int) -> None: ...
    def setSolveStates(self, list: java.util.List[str]) -> None: ...
    def setTimeSinceFirstObservation(self, double: float) -> None: ...
    def setTimeSinceLastObservation(self, double: float) -> None: ...
    def setTracksAvailable(self, int: int) -> None: ...
    def setTracksUsed(self, int: int) -> None: ...
    def setWeightedRms(self, double: float) -> None: ...
    def validate(self, double: float) -> None: ...

class OrbitDeterminationKey(java.lang.Enum['OrbitDeterminationKey']):
    COMMENT: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_ID: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_PREV_ID: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_METHOD: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_EPOCH: typing.ClassVar['OrbitDeterminationKey'] = ...
    DAYS_SINCE_FIRST_OBS: typing.ClassVar['OrbitDeterminationKey'] = ...
    DAYS_SINCE_LAST_OBS: typing.ClassVar['OrbitDeterminationKey'] = ...
    RECOMMENDED_OD_SPAN: typing.ClassVar['OrbitDeterminationKey'] = ...
    ACTUAL_OD_SPAN: typing.ClassVar['OrbitDeterminationKey'] = ...
    OBS_AVAILABLE: typing.ClassVar['OrbitDeterminationKey'] = ...
    OBS_USED: typing.ClassVar['OrbitDeterminationKey'] = ...
    TRACKS_AVAILABLE: typing.ClassVar['OrbitDeterminationKey'] = ...
    TRACKS_USED: typing.ClassVar['OrbitDeterminationKey'] = ...
    MAXIMUM_OBS_GAP: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_EPOCH_EIGMAJ: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_EPOCH_EIGINT: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_EPOCH_EIGMIN: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_MAX_PRED_EIGMAJ: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_MIN_PRED_EIGMIN: typing.ClassVar['OrbitDeterminationKey'] = ...
    OD_CONFIDENCE: typing.ClassVar['OrbitDeterminationKey'] = ...
    GDOP: typing.ClassVar['OrbitDeterminationKey'] = ...
    SOLVE_N: typing.ClassVar['OrbitDeterminationKey'] = ...
    SOLVE_STATES: typing.ClassVar['OrbitDeterminationKey'] = ...
    CONSIDER_N: typing.ClassVar['OrbitDeterminationKey'] = ...
    CONSIDER_PARAMS: typing.ClassVar['OrbitDeterminationKey'] = ...
    SEDR: typing.ClassVar['OrbitDeterminationKey'] = ...
    SENSORS_N: typing.ClassVar['OrbitDeterminationKey'] = ...
    SENSORS: typing.ClassVar['OrbitDeterminationKey'] = ...
    WEIGHTED_RMS: typing.ClassVar['OrbitDeterminationKey'] = ...
    DATA_TYPES: typing.ClassVar['OrbitDeterminationKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, orbitDetermination: OrbitDetermination) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OrbitDeterminationKey': ...
    @staticmethod
    def values() -> typing.List['OrbitDeterminationKey']: ...

class OrbitElementsType(java.lang.Enum['OrbitElementsType']):
    ADBARV: typing.ClassVar['OrbitElementsType'] = ...
    CARTP: typing.ClassVar['OrbitElementsType'] = ...
    CARTPV: typing.ClassVar['OrbitElementsType'] = ...
    CARTPVA: typing.ClassVar['OrbitElementsType'] = ...
    DELAUNAY: typing.ClassVar['OrbitElementsType'] = ...
    DELAUNAYMOD: typing.ClassVar['OrbitElementsType'] = ...
    EIGVAL3EIGVEC3: typing.ClassVar['OrbitElementsType'] = ...
    EQUINOCTIAL: typing.ClassVar['OrbitElementsType'] = ...
    EQUINOCTIALMOD: typing.ClassVar['OrbitElementsType'] = ...
    GEODETIC: typing.ClassVar['OrbitElementsType'] = ...
    KEPLERIAN: typing.ClassVar['OrbitElementsType'] = ...
    KEPLERIANMEAN: typing.ClassVar['OrbitElementsType'] = ...
    LDBARV: typing.ClassVar['OrbitElementsType'] = ...
    ONSTATION: typing.ClassVar['OrbitElementsType'] = ...
    POINCARE: typing.ClassVar['OrbitElementsType'] = ...
    def getUnits(self) -> java.util.List[org.orekit.utils.units.Unit]: ...
    def toCartesian(self, absoluteDate: org.orekit.time.AbsoluteDate, doubleArray: typing.List[float], oneAxisEllipsoid: org.orekit.bodies.OneAxisEllipsoid, double2: float) -> org.orekit.utils.TimeStampedPVCoordinates: ...
    def toRawElements(self, timeStampedPVCoordinates: org.orekit.utils.TimeStampedPVCoordinates, frame: org.orekit.frames.Frame, oneAxisEllipsoid: org.orekit.bodies.OneAxisEllipsoid, double: float) -> typing.List[float]: ...
    def toString(self) -> str: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OrbitElementsType': ...
    @staticmethod
    def values() -> typing.List['OrbitElementsType']: ...

class OrbitManeuver(org.orekit.time.TimeStamped):
    def __init__(self): ...
    def getAcceleration(self) -> org.hipparchus.geometry.euclidean.threed.Vector3D: ...
    def getAccelerationDirectionSigma(self) -> float: ...
    def getAccelerationInterpolation(self) -> org.orekit.files.ccsds.definitions.OnOff: ...
    def getAccelerationMagnitudeSigma(self) -> float: ...
    def getDate(self) -> org.orekit.time.AbsoluteDate: ...
    def getDeltaMass(self) -> float: ...
    def getDeployDirSigma(self) -> float: ...
    def getDeployDv(self) -> org.hipparchus.geometry.euclidean.threed.Vector3D: ...
    def getDeployDvCda(self) -> float: ...
    def getDeployDvRatio(self) -> float: ...
    def getDeployDvSigma(self) -> float: ...
    def getDeployId(self) -> str: ...
    def getDeployMass(self) -> float: ...
    def getDuration(self) -> float: ...
    def getDv(self) -> org.hipparchus.geometry.euclidean.threed.Vector3D: ...
    def getDvDirSigma(self) -> float: ...
    def getDvMagSigma(self) -> float: ...
    def getThrust(self) -> org.hipparchus.geometry.euclidean.threed.Vector3D: ...
    def getThrustDirectionSigma(self) -> float: ...
    def getThrustEfficiency(self) -> float: ...
    def getThrustInterpolation(self) -> org.orekit.files.ccsds.definitions.OnOff: ...
    def getThrustIsp(self) -> float: ...
    def getThrustMagnitudeSigma(self) -> float: ...
    def setAcceleration(self, int: int, double: float) -> None: ...
    def setAccelerationDirectionSigma(self, double: float) -> None: ...
    def setAccelerationInterpolation(self, onOff: org.orekit.files.ccsds.definitions.OnOff) -> None: ...
    def setAccelerationMagnitudeSigma(self, double: float) -> None: ...
    def setDate(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setDeltaMass(self, double: float) -> None: ...
    def setDeployDirSigma(self, double: float) -> None: ...
    def setDeployDv(self, int: int, double: float) -> None: ...
    def setDeployDvCda(self, double: float) -> None: ...
    def setDeployDvRatio(self, double: float) -> None: ...
    def setDeployDvSigma(self, double: float) -> None: ...
    def setDeployId(self, string: str) -> None: ...
    def setDeployMass(self, double: float) -> None: ...
    def setDuration(self, double: float) -> None: ...
    def setDv(self, int: int, double: float) -> None: ...
    def setDvDirSigma(self, double: float) -> None: ...
    def setDvMagSigma(self, double: float) -> None: ...
    def setThrust(self, int: int, double: float) -> None: ...
    def setThrustDirectionSigma(self, double: float) -> None: ...
    def setThrustEfficiency(self, double: float) -> None: ...
    def setThrustInterpolation(self, onOff: org.orekit.files.ccsds.definitions.OnOff) -> None: ...
    def setThrustIsp(self, double: float) -> None: ...
    def setThrustMagnitudeSigma(self, double: float) -> None: ...

class OrbitManeuverHistory:
    def __init__(self, orbitManeuverHistoryMetadata: 'OrbitManeuverHistoryMetadata', list: java.util.List[OrbitManeuver]): ...
    def getManeuvers(self) -> java.util.List[OrbitManeuver]: ...
    def getMetadata(self) -> 'OrbitManeuverHistoryMetadata': ...

class OrbitManeuverHistoryMetadata(org.orekit.files.ccsds.section.CommentsContainer):
    DEFAULT_DC_TYPE: typing.ClassVar[org.orekit.files.ccsds.definitions.DutyCycleType] = ...
    def __init__(self, absoluteDate: org.orekit.time.AbsoluteDate): ...
    def getDcBodyFrame(self) -> org.orekit.files.ccsds.definitions.SpacecraftBodyFrame: ...
    def getDcBodyTrigger(self) -> org.hipparchus.geometry.euclidean.threed.Vector3D: ...
    def getDcExecStart(self) -> org.orekit.time.AbsoluteDate: ...
    def getDcExecStop(self) -> org.orekit.time.AbsoluteDate: ...
    def getDcMaxCycles(self) -> int: ...
    def getDcMinCycles(self) -> int: ...
    def getDcPhaseStartAngle(self) -> float: ...
    def getDcPhaseStopAngle(self) -> float: ...
    def getDcRefDir(self) -> org.hipparchus.geometry.euclidean.threed.Vector3D: ...
    def getDcRefTime(self) -> org.orekit.time.AbsoluteDate: ...
    def getDcTimePulseDuration(self) -> float: ...
    def getDcTimePulsePeriod(self) -> float: ...
    def getDcType(self) -> org.orekit.files.ccsds.definitions.DutyCycleType: ...
    def getDcWindowClose(self) -> org.orekit.time.AbsoluteDate: ...
    def getDcWindowOpen(self) -> org.orekit.time.AbsoluteDate: ...
    def getGravitationalAssist(self) -> org.orekit.files.ccsds.definitions.BodyFacade: ...
    def getManBasis(self) -> ManBasis: ...
    def getManBasisID(self) -> str: ...
    def getManComposition(self) -> java.util.List[ManeuverFieldType]: ...
    def getManDeviceID(self) -> str: ...
    def getManFrameEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getManID(self) -> str: ...
    def getManNextEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getManNextID(self) -> str: ...
    def getManPredSource(self) -> str: ...
    def getManPrevEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getManPrevID(self) -> str: ...
    def getManPurpose(self) -> java.util.List[str]: ...
    def getManReferenceFrame(self) -> org.orekit.files.ccsds.definitions.FrameFacade: ...
    def getManUnits(self) -> java.util.List[org.orekit.utils.units.Unit]: ...
    def setDcBodyFrame(self, spacecraftBodyFrame: org.orekit.files.ccsds.definitions.SpacecraftBodyFrame) -> None: ...
    def setDcBodyTrigger(self, vector3D: org.hipparchus.geometry.euclidean.threed.Vector3D) -> None: ...
    def setDcExecStart(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setDcExecStop(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setDcMaxCycles(self, int: int) -> None: ...
    def setDcMinCycles(self, int: int) -> None: ...
    def setDcPhaseStartAngle(self, double: float) -> None: ...
    def setDcPhaseStopAngle(self, double: float) -> None: ...
    def setDcRefDir(self, vector3D: org.hipparchus.geometry.euclidean.threed.Vector3D) -> None: ...
    def setDcRefTime(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setDcTimePulseDuration(self, double: float) -> None: ...
    def setDcTimePulsePeriod(self, double: float) -> None: ...
    def setDcType(self, dutyCycleType: org.orekit.files.ccsds.definitions.DutyCycleType) -> None: ...
    def setDcWindowClose(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setDcWindowOpen(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setGravitationalAssist(self, bodyFacade: org.orekit.files.ccsds.definitions.BodyFacade) -> None: ...
    def setManBasis(self, manBasis: ManBasis) -> None: ...
    def setManBasisID(self, string: str) -> None: ...
    def setManComposition(self, list: java.util.List[ManeuverFieldType]) -> None: ...
    def setManDeviceID(self, string: str) -> None: ...
    def setManFrameEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setManID(self, string: str) -> None: ...
    def setManNextEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setManNextID(self, string: str) -> None: ...
    def setManPredSource(self, string: str) -> None: ...
    def setManPrevEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setManPrevID(self, string: str) -> None: ...
    def setManPurpose(self, list: java.util.List[str]) -> None: ...
    def setManReferenceFrame(self, frameFacade: org.orekit.files.ccsds.definitions.FrameFacade) -> None: ...
    def setManUnits(self, list: java.util.List[org.orekit.utils.units.Unit]) -> None: ...
    def validate(self, double: float) -> None: ...

class OrbitManeuverHistoryMetadataKey(java.lang.Enum['OrbitManeuverHistoryMetadataKey']):
    COMMENT: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_ID: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_PREV_ID: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_NEXT_ID: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_BASIS: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_BASIS_ID: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_DEVICE_ID: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_PREV_EPOCH: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_NEXT_EPOCH: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_PURPOSE: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_PRED_SOURCE: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_REF_FRAME: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_FRAME_EPOCH: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    GRAV_ASSIST_NAME: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_TYPE: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_WIN_OPEN: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_WIN_CLOSE: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_MIN_CYCLES: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_MAX_CYCLES: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_EXEC_START: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_EXEC_STOP: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_REF_TIME: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_TIME_PULSE_DURATION: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_TIME_PULSE_PERIOD: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_REF_DIR: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_BODY_FRAME: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_BODY_TRIGGER: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_PA_START_ANGLE: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    DC_PA_STOP_ANGLE: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_COMPOSITION: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    MAN_UNITS: typing.ClassVar['OrbitManeuverHistoryMetadataKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, orbitManeuverHistoryMetadata: OrbitManeuverHistoryMetadata) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OrbitManeuverHistoryMetadataKey': ...
    @staticmethod
    def values() -> typing.List['OrbitManeuverHistoryMetadataKey']: ...

class OrbitPhysicalProperties(org.orekit.files.ccsds.ndm.CommonPhysicalProperties):
    def __init__(self, absoluteDate: org.orekit.time.AbsoluteDate): ...
    def getAttitudeActuatorType(self) -> str: ...
    def getAttitudeControlAccuracy(self) -> float: ...
    def getAttitudeControlMode(self) -> str: ...
    def getAttitudeKnowledgeAccuracy(self) -> float: ...
    def getAttitudePointingAccuracy(self) -> float: ...
    def getBolDv(self) -> float: ...
    def getBusModel(self) -> str: ...
    def getDockedWith(self) -> java.util.List[str]: ...
    def getDragCoefficient(self) -> float: ...
    def getDragConstantArea(self) -> float: ...
    def getDragUncertainty(self) -> float: ...
    def getDryMass(self) -> float: ...
    def getInertiaMatrix(self) -> org.hipparchus.linear.RealMatrix: ...
    def getInitialWetMass(self) -> float: ...
    def getManeuversFrequency(self) -> float: ...
    def getManeuversPerYear(self) -> float: ...
    def getManufacturer(self) -> str: ...
    def getMaxAreaForCollisionProbability(self) -> float: ...
    def getMaxThrust(self) -> float: ...
    def getMinAreaForCollisionProbability(self) -> float: ...
    def getRemainingDv(self) -> float: ...
    def getSrpCoefficient(self) -> float: ...
    def getSrpConstantArea(self) -> float: ...
    def getSrpUncertainty(self) -> float: ...
    def getTypAreaForCollisionProbability(self) -> float: ...
    def getWetMass(self) -> float: ...
    def setAttitudeActuatorType(self, string: str) -> None: ...
    def setAttitudeControlAccuracy(self, double: float) -> None: ...
    def setAttitudeControlMode(self, string: str) -> None: ...
    def setAttitudeKnowledgeAccuracy(self, double: float) -> None: ...
    def setAttitudePointingAccuracy(self, double: float) -> None: ...
    def setBolDv(self, double: float) -> None: ...
    def setBusModel(self, string: str) -> None: ...
    def setDockedWith(self, list: java.util.List[str]) -> None: ...
    def setDragCoefficient(self, double: float) -> None: ...
    def setDragConstantArea(self, double: float) -> None: ...
    def setDragUncertainty(self, double: float) -> None: ...
    def setDryMass(self, double: float) -> None: ...
    def setInertiaMatrixEntry(self, int: int, int2: int, double: float) -> None: ...
    def setInitialWetMass(self, double: float) -> None: ...
    def setManeuversFrequency(self, double: float) -> None: ...
    def setManufacturer(self, string: str) -> None: ...
    def setMaxAreaForCollisionProbability(self, double: float) -> None: ...
    def setMaxThrust(self, double: float) -> None: ...
    def setMinAreaForCollisionProbability(self, double: float) -> None: ...
    def setRemainingDv(self, double: float) -> None: ...
    def setSrpCoefficient(self, double: float) -> None: ...
    def setSrpConstantArea(self, double: float) -> None: ...
    def setSrpUncertainty(self, double: float) -> None: ...
    def setTypAreaForCollisionProbability(self, double: float) -> None: ...
    def setWetMass(self, double: float) -> None: ...

class OrbitPhysicalPropertiesKey(java.lang.Enum['OrbitPhysicalPropertiesKey']):
    COMMENT: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    MANUFACTURER: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    BUS_MODEL: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DOCKED_WITH: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DRAG_CONST_AREA: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DRAG_COEFF_NOM: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DRAG_UNCERTAINTY: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    INITIAL_WET_MASS: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    WET_MASS: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DRY_MASS: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_PARENT_FRAME: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_PARENT_FRAME_EPOCH: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_Q1: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_Q2: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_Q3: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_QC: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_MAX: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_INT: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    OEB_MIN: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AREA_ALONG_OEB_MAX: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AREA_ALONG_OEB_INT: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AREA_ALONG_OEB_MIN: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AREA_MIN_FOR_PC: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AREA_MAX_FOR_PC: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AREA_TYP_FOR_PC: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    RCS: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    RCS_MIN: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    RCS_MAX: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    SRP_CONST_AREA: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    SOLAR_RAD_COEFF: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    SOLAR_RAD_UNCERTAINTY: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    VM_ABSOLUTE: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    VM_APPARENT_MIN: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    VM_APPARENT: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    VM_APPARENT_MAX: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    REFLECTANCE: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    ATT_CONTROL_MODE: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    ATT_ACTUATOR_TYPE: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    ATT_KNOWLEDGE: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    ATT_CONTROL: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    ATT_POINTING: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    AVG_MANEUVER_FREQ: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    MAX_THRUST: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DV_BOL: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    DV_REMAINING: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    IXX: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    IYY: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    IZZ: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    IXY: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    IXZ: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    IYZ: typing.ClassVar['OrbitPhysicalPropertiesKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, orbitPhysicalProperties: OrbitPhysicalProperties) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'OrbitPhysicalPropertiesKey': ...
    @staticmethod
    def values() -> typing.List['OrbitPhysicalPropertiesKey']: ...

class Ordering(java.lang.Enum['Ordering']):
    LTM: typing.ClassVar['Ordering'] = ...
    UTM: typing.ClassVar['Ordering'] = ...
    FULL: typing.ClassVar['Ordering'] = ...
    LTMWCC: typing.ClassVar['Ordering'] = ...
    UTMWCC: typing.ClassVar['Ordering'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'Ordering': ...
    @staticmethod
    def values() -> typing.List['Ordering']: ...

class Perturbations(org.orekit.files.ccsds.section.CommentsContainer):
    def __init__(self, celestialBodies: org.orekit.bodies.CelestialBodies): ...
    def getAlbedoGridSize(self) -> int: ...
    def getAlbedoModel(self) -> str: ...
    def getAtmosphericModel(self) -> str: ...
    def getCentralBodyRotation(self) -> float: ...
    def getEquatorialRadius(self) -> float: ...
    def getFixedF10P7(self) -> float: ...
    def getFixedF10P7Mean(self) -> float: ...
    def getFixedGeomagneticAp(self) -> float: ...
    def getFixedGeomagneticDst(self) -> float: ...
    def getFixedGeomagneticKp(self) -> float: ...
    def getFixedM10P7(self) -> float: ...
    def getFixedM10P7Mean(self) -> float: ...
    def getFixedS10P7(self) -> float: ...
    def getFixedS10P7Mean(self) -> float: ...
    def getFixedY10P7(self) -> float: ...
    def getFixedY10P7Mean(self) -> float: ...
    def getGm(self) -> float: ...
    def getGravityDegree(self) -> int: ...
    def getGravityModel(self) -> str: ...
    def getGravityOrder(self) -> int: ...
    def getInterpMethodSW(self) -> str: ...
    def getNBodyPerturbations(self) -> java.util.List[org.orekit.files.ccsds.definitions.BodyFacade]: ...
    def getOblateFlattening(self) -> float: ...
    def getOceanTidesModel(self) -> str: ...
    def getReductionTheory(self) -> str: ...
    def getShadowBodies(self) -> java.util.List[org.orekit.files.ccsds.definitions.BodyFacade]: ...
    def getShadowModel(self) -> 'ShadowModel': ...
    def getSolidTidesModel(self) -> str: ...
    def getSpaceWeatherEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getSpaceWeatherSource(self) -> str: ...
    def getSrpModel(self) -> str: ...
    def setAlbedoGridSize(self, int: int) -> None: ...
    def setAlbedoModel(self, string: str) -> None: ...
    def setAtmosphericModel(self, string: str) -> None: ...
    def setCentralBodyRotation(self, double: float) -> None: ...
    def setEquatorialRadius(self, double: float) -> None: ...
    def setFixedF10P7(self, double: float) -> None: ...
    def setFixedF10P7Mean(self, double: float) -> None: ...
    def setFixedGeomagneticAp(self, double: float) -> None: ...
    def setFixedGeomagneticDst(self, double: float) -> None: ...
    def setFixedGeomagneticKp(self, double: float) -> None: ...
    def setFixedM10P7(self, double: float) -> None: ...
    def setFixedM10P7Mean(self, double: float) -> None: ...
    def setFixedS10P7(self, double: float) -> None: ...
    def setFixedS10P7Mean(self, double: float) -> None: ...
    def setFixedY10P7(self, double: float) -> None: ...
    def setFixedY10P7Mean(self, double: float) -> None: ...
    def setGm(self, double: float) -> None: ...
    def setGravityModel(self, string: str, int: int, int2: int) -> None: ...
    def setInterpMethodSW(self, string: str) -> None: ...
    def setNBodyPerturbations(self, list: java.util.List[org.orekit.files.ccsds.definitions.BodyFacade]) -> None: ...
    def setOblateFlattening(self, double: float) -> None: ...
    def setOceanTidesModel(self, string: str) -> None: ...
    def setReductionTheory(self, string: str) -> None: ...
    def setShadowBodies(self, list: java.util.List[org.orekit.files.ccsds.definitions.BodyFacade]) -> None: ...
    def setShadowModel(self, shadowModel: 'ShadowModel') -> None: ...
    def setSolidTidesModel(self, string: str) -> None: ...
    def setSpaceWeatherEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setSpaceWeatherSource(self, string: str) -> None: ...
    def setSrpModel(self, string: str) -> None: ...

class PerturbationsKey(java.lang.Enum['PerturbationsKey']):
    COMMENT: typing.ClassVar['PerturbationsKey'] = ...
    ATMOSPHERIC_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    GRAVITY_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    EQUATORIAL_RADIUS: typing.ClassVar['PerturbationsKey'] = ...
    GM: typing.ClassVar['PerturbationsKey'] = ...
    N_BODY_PERTURBATIONS: typing.ClassVar['PerturbationsKey'] = ...
    CENTRAL_BODY_ROTATION: typing.ClassVar['PerturbationsKey'] = ...
    OBLATE_FLATTENING: typing.ClassVar['PerturbationsKey'] = ...
    OCEAN_TIDES_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    SOLID_TIDES_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    REDUCTION_THEORY: typing.ClassVar['PerturbationsKey'] = ...
    ALBEDO_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    ALBEDO_GRID_SIZE: typing.ClassVar['PerturbationsKey'] = ...
    SHADOW_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    SHADOW_BODIES: typing.ClassVar['PerturbationsKey'] = ...
    SRP_MODEL: typing.ClassVar['PerturbationsKey'] = ...
    SW_DATA_SOURCE: typing.ClassVar['PerturbationsKey'] = ...
    SW_DATA_EPOCH: typing.ClassVar['PerturbationsKey'] = ...
    SW_INTERP_METHOD: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_GEOMAG_KP: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_GEOMAG_AP: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_GEOMAG_DST: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_F10P7: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_F10P7_MEAN: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_M10P7: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_M10P7_MEAN: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_S10P7: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_S10P7_MEAN: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_Y10P7: typing.ClassVar['PerturbationsKey'] = ...
    FIXED_Y10P7_MEAN: typing.ClassVar['PerturbationsKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, perturbations: Perturbations) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'PerturbationsKey': ...
    @staticmethod
    def values() -> typing.List['PerturbationsKey']: ...

class ShadowModel(java.lang.Enum['ShadowModel']):
    NONE: typing.ClassVar['ShadowModel'] = ...
    CYLINDRICAL: typing.ClassVar['ShadowModel'] = ...
    CONE: typing.ClassVar['ShadowModel'] = ...
    DUAL_CONE: typing.ClassVar['ShadowModel'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'ShadowModel': ...
    @staticmethod
    def values() -> typing.List['ShadowModel']: ...

class StreamingOcmWriter(java.lang.AutoCloseable):
    @typing.overload
    def __init__(self, generator: org.orekit.files.ccsds.utils.generation.Generator, ocmWriter: OcmWriter, odmHeader: org.orekit.files.ccsds.ndm.odm.OdmHeader, ocmMetadata: OcmMetadata, trajectoryStateHistoryMetadata: 'TrajectoryStateHistoryMetadata'): ...
    @typing.overload
    def __init__(self, generator: org.orekit.files.ccsds.utils.generation.Generator, ocmWriter: OcmWriter, odmHeader: org.orekit.files.ccsds.ndm.odm.OdmHeader, ocmMetadata: OcmMetadata, trajectoryStateHistoryMetadata: 'TrajectoryStateHistoryMetadata', boolean: bool): ...
    def close(self) -> None: ...
    def newBlock(self) -> 'StreamingOcmWriter.BlockWriter': ...
    class BlockWriter(org.orekit.propagation.sampling.OrekitFixedStepHandler):
        def __init__(self, streamingOcmWriter: 'StreamingOcmWriter'): ...
        def finish(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> None: ...
        def handleStep(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> None: ...
        def init(self, spacecraftState: org.orekit.propagation.SpacecraftState, absoluteDate: org.orekit.time.AbsoluteDate, double: float) -> None: ...

class TrajectoryState(org.orekit.time.TimeStamped):
    @typing.overload
    def __init__(self, orbitElementsType: OrbitElementsType, absoluteDate: org.orekit.time.AbsoluteDate, doubleArray: typing.List[float]): ...
    @typing.overload
    def __init__(self, orbitElementsType: OrbitElementsType, absoluteDate: org.orekit.time.AbsoluteDate, stringArray: typing.List[str], int: int, list: java.util.List[org.orekit.utils.units.Unit]): ...
    def getAvailableDerivatives(self) -> org.orekit.utils.CartesianDerivativesFilter: ...
    def getDate(self) -> org.orekit.time.AbsoluteDate: ...
    def getElements(self) -> typing.List[float]: ...
    def getType(self) -> OrbitElementsType: ...
    def toCartesian(self, oneAxisEllipsoid: org.orekit.bodies.OneAxisEllipsoid, double: float) -> org.orekit.utils.TimeStampedPVCoordinates: ...

class TrajectoryStateHistory(org.orekit.files.general.EphemerisFile.EphemerisSegment[org.orekit.utils.TimeStampedPVCoordinates]):
    def __init__(self, trajectoryStateHistoryMetadata: 'TrajectoryStateHistoryMetadata', list: java.util.List[TrajectoryState], oneAxisEllipsoid: org.orekit.bodies.OneAxisEllipsoid, double: float): ...
    def getAvailableDerivatives(self) -> org.orekit.utils.CartesianDerivativesFilter: ...
    def getBody(self) -> org.orekit.bodies.OneAxisEllipsoid: ...
    def getCoordinates(self) -> java.util.List[org.orekit.utils.TimeStampedPVCoordinates]: ...
    def getFrame(self) -> org.orekit.frames.Frame: ...
    def getInterpolationSamples(self) -> int: ...
    def getMetadata(self) -> 'TrajectoryStateHistoryMetadata': ...
    def getMu(self) -> float: ...
    def getStart(self) -> org.orekit.time.AbsoluteDate: ...
    def getStop(self) -> org.orekit.time.AbsoluteDate: ...
    def getTrajectoryStates(self) -> java.util.List[TrajectoryState]: ...

class TrajectoryStateHistoryMetadata(org.orekit.files.ccsds.section.CommentsContainer):
    DEFAULT_INTERPOLATION_METHOD: typing.ClassVar[org.orekit.files.ccsds.ndm.odm.oem.InterpolationMethod] = ...
    DEFAULT_INTERPOLATION_DEGREE: typing.ClassVar[int] = ...
    def __init__(self, absoluteDate: org.orekit.time.AbsoluteDate, dataContext: org.orekit.data.DataContext): ...
    def copy(self, double: float) -> 'TrajectoryStateHistoryMetadata': ...
    def getCenter(self) -> org.orekit.files.ccsds.definitions.BodyFacade: ...
    def getInterpolationDegree(self) -> int: ...
    def getInterpolationMethod(self) -> org.orekit.files.ccsds.ndm.odm.oem.InterpolationMethod: ...
    def getOrbAveraging(self) -> str: ...
    def getOrbRevNum(self) -> int: ...
    def getOrbRevNumBasis(self) -> int: ...
    def getPropagator(self) -> str: ...
    def getTrajBasis(self) -> str: ...
    def getTrajBasisID(self) -> str: ...
    def getTrajFrameEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getTrajID(self) -> str: ...
    def getTrajNextID(self) -> str: ...
    def getTrajPrevID(self) -> str: ...
    def getTrajReferenceFrame(self) -> org.orekit.files.ccsds.definitions.FrameFacade: ...
    def getTrajType(self) -> OrbitElementsType: ...
    def getTrajUnits(self) -> java.util.List[org.orekit.utils.units.Unit]: ...
    def getUseableStartTime(self) -> org.orekit.time.AbsoluteDate: ...
    def getUseableStopTime(self) -> org.orekit.time.AbsoluteDate: ...
    @staticmethod
    def incrementTrajID(string: str) -> str: ...
    def setCenter(self, bodyFacade: org.orekit.files.ccsds.definitions.BodyFacade) -> None: ...
    def setInterpolationDegree(self, int: int) -> None: ...
    def setInterpolationMethod(self, interpolationMethod: org.orekit.files.ccsds.ndm.odm.oem.InterpolationMethod) -> None: ...
    def setOrbAveraging(self, string: str) -> None: ...
    def setOrbRevNum(self, int: int) -> None: ...
    def setOrbRevNumBasis(self, int: int) -> None: ...
    def setPropagator(self, string: str) -> None: ...
    def setTrajBasis(self, string: str) -> None: ...
    def setTrajBasisID(self, string: str) -> None: ...
    def setTrajFrameEpoch(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setTrajID(self, string: str) -> None: ...
    def setTrajNextID(self, string: str) -> None: ...
    def setTrajPrevID(self, string: str) -> None: ...
    def setTrajReferenceFrame(self, frameFacade: org.orekit.files.ccsds.definitions.FrameFacade) -> None: ...
    def setTrajType(self, orbitElementsType: OrbitElementsType) -> None: ...
    def setTrajUnits(self, list: java.util.List[org.orekit.utils.units.Unit]) -> None: ...
    def setUseableStartTime(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def setUseableStopTime(self, absoluteDate: org.orekit.time.AbsoluteDate) -> None: ...
    def validate(self, double: float) -> None: ...

class TrajectoryStateHistoryMetadataKey(java.lang.Enum['TrajectoryStateHistoryMetadataKey']):
    COMMENT: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_ID: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_PREV_ID: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_NEXT_ID: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_BASIS: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_BASIS_ID: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    INTERPOLATION: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    INTERPOLATION_DEGREE: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    PROPAGATOR: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    CENTER_NAME: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_REF_FRAME: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_FRAME_EPOCH: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    USEABLE_START_TIME: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    USEABLE_STOP_TIME: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    ORB_REVNUM: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    ORB_REVNUM_BASIS: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    ORB_AVERAGING: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_TYPE: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    TRAJ_UNITS: typing.ClassVar['TrajectoryStateHistoryMetadataKey'] = ...
    def process(self, parseToken: org.orekit.files.ccsds.utils.lexical.ParseToken, contextBinding: org.orekit.files.ccsds.utils.ContextBinding, trajectoryStateHistoryMetadata: TrajectoryStateHistoryMetadata) -> bool: ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'TrajectoryStateHistoryMetadataKey': ...
    @staticmethod
    def values() -> typing.List['TrajectoryStateHistoryMetadataKey']: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.orekit.files.ccsds.ndm.odm.ocm")``.

    EphemerisOcmWriter: typing.Type[EphemerisOcmWriter]
    ManBasis: typing.Type[ManBasis]
    ManeuverFieldType: typing.Type[ManeuverFieldType]
    ObjectType: typing.Type[ObjectType]
    Ocm: typing.Type[Ocm]
    OcmData: typing.Type[OcmData]
    OcmDataSubStructureKey: typing.Type[OcmDataSubStructureKey]
    OcmElements: typing.Type[OcmElements]
    OcmMetadata: typing.Type[OcmMetadata]
    OcmMetadataKey: typing.Type[OcmMetadataKey]
    OcmParser: typing.Type[OcmParser]
    OcmSatelliteEphemeris: typing.Type[OcmSatelliteEphemeris]
    OcmWriter: typing.Type[OcmWriter]
    OpsStatus: typing.Type[OpsStatus]
    OrbitCategory: typing.Type[OrbitCategory]
    OrbitCovariance: typing.Type[OrbitCovariance]
    OrbitCovarianceHistory: typing.Type[OrbitCovarianceHistory]
    OrbitCovarianceHistoryMetadata: typing.Type[OrbitCovarianceHistoryMetadata]
    OrbitCovarianceHistoryMetadataKey: typing.Type[OrbitCovarianceHistoryMetadataKey]
    OrbitDetermination: typing.Type[OrbitDetermination]
    OrbitDeterminationKey: typing.Type[OrbitDeterminationKey]
    OrbitElementsType: typing.Type[OrbitElementsType]
    OrbitManeuver: typing.Type[OrbitManeuver]
    OrbitManeuverHistory: typing.Type[OrbitManeuverHistory]
    OrbitManeuverHistoryMetadata: typing.Type[OrbitManeuverHistoryMetadata]
    OrbitManeuverHistoryMetadataKey: typing.Type[OrbitManeuverHistoryMetadataKey]
    OrbitPhysicalProperties: typing.Type[OrbitPhysicalProperties]
    OrbitPhysicalPropertiesKey: typing.Type[OrbitPhysicalPropertiesKey]
    Ordering: typing.Type[Ordering]
    Perturbations: typing.Type[Perturbations]
    PerturbationsKey: typing.Type[PerturbationsKey]
    ShadowModel: typing.Type[ShadowModel]
    StreamingOcmWriter: typing.Type[StreamingOcmWriter]
    TrajectoryState: typing.Type[TrajectoryState]
    TrajectoryStateHistory: typing.Type[TrajectoryStateHistory]
    TrajectoryStateHistoryMetadata: typing.Type[TrajectoryStateHistoryMetadata]
    TrajectoryStateHistoryMetadataKey: typing.Type[TrajectoryStateHistoryMetadataKey]
