import java.util
import org.hipparchus
import org.hipparchus.analysis.differentiation
import org.orekit.attitudes
import org.orekit.frames
import org.orekit.propagation
import org.orekit.propagation.analytical
import org.orekit.time
import org.orekit.utils
import typing



_FieldIntelsatElevenElements__T = typing.TypeVar('_FieldIntelsatElevenElements__T', bound=org.hipparchus.CalculusFieldElement)  # <T>
class FieldIntelsatElevenElements(typing.Generic[_FieldIntelsatElevenElements__T]):
    def __init__(self, fieldAbsoluteDate: org.orekit.time.FieldAbsoluteDate[_FieldIntelsatElevenElements__T], t: _FieldIntelsatElevenElements__T, t2: _FieldIntelsatElevenElements__T, t3: _FieldIntelsatElevenElements__T, t4: _FieldIntelsatElevenElements__T, t5: _FieldIntelsatElevenElements__T, t6: _FieldIntelsatElevenElements__T, t7: _FieldIntelsatElevenElements__T, t8: _FieldIntelsatElevenElements__T, t9: _FieldIntelsatElevenElements__T, t10: _FieldIntelsatElevenElements__T, t11: _FieldIntelsatElevenElements__T): ...
    def getEpoch(self) -> org.orekit.time.FieldAbsoluteDate[_FieldIntelsatElevenElements__T]: ...
    def getLatC(self) -> _FieldIntelsatElevenElements__T: ...
    def getLatC1(self) -> _FieldIntelsatElevenElements__T: ...
    def getLatS(self) -> _FieldIntelsatElevenElements__T: ...
    def getLatS1(self) -> _FieldIntelsatElevenElements__T: ...
    def getLm0(self) -> _FieldIntelsatElevenElements__T: ...
    def getLm1(self) -> _FieldIntelsatElevenElements__T: ...
    def getLm2(self) -> _FieldIntelsatElevenElements__T: ...
    def getLonC(self) -> _FieldIntelsatElevenElements__T: ...
    def getLonC1(self) -> _FieldIntelsatElevenElements__T: ...
    def getLonS(self) -> _FieldIntelsatElevenElements__T: ...
    def getLonS1(self) -> _FieldIntelsatElevenElements__T: ...

_FieldIntelsatElevenElementsPropagator__T = typing.TypeVar('_FieldIntelsatElevenElementsPropagator__T', bound=org.hipparchus.CalculusFieldElement)  # <T>
class FieldIntelsatElevenElementsPropagator(org.orekit.propagation.analytical.FieldAbstractAnalyticalPropagator[_FieldIntelsatElevenElementsPropagator__T], typing.Generic[_FieldIntelsatElevenElementsPropagator__T]):
    @typing.overload
    def __init__(self, fieldIntelsatElevenElements: FieldIntelsatElevenElements[_FieldIntelsatElevenElementsPropagator__T]): ...
    @typing.overload
    def __init__(self, fieldIntelsatElevenElements: FieldIntelsatElevenElements[_FieldIntelsatElevenElementsPropagator__T], frame: org.orekit.frames.Frame, frame2: org.orekit.frames.Frame): ...
    @typing.overload
    def __init__(self, fieldIntelsatElevenElements: FieldIntelsatElevenElements[_FieldIntelsatElevenElementsPropagator__T], frame: org.orekit.frames.Frame, frame2: org.orekit.frames.Frame, attitudeProvider: org.orekit.attitudes.AttitudeProvider, t: _FieldIntelsatElevenElementsPropagator__T): ...
    def getEastLongitudeDegrees(self) -> org.hipparchus.analysis.differentiation.FieldUnivariateDerivative2[_FieldIntelsatElevenElementsPropagator__T]: ...
    def getFrame(self) -> org.orekit.frames.Frame: ...
    def getGeocentricLatitudeDegrees(self) -> org.hipparchus.analysis.differentiation.FieldUnivariateDerivative2[_FieldIntelsatElevenElementsPropagator__T]: ...
    def getOrbitRadius(self) -> org.hipparchus.analysis.differentiation.FieldUnivariateDerivative2[_FieldIntelsatElevenElementsPropagator__T]: ...
    def getParametersDrivers(self) -> java.util.List[org.orekit.utils.ParameterDriver]: ...
    def propagateInEcef(self, fieldAbsoluteDate: org.orekit.time.FieldAbsoluteDate[_FieldIntelsatElevenElementsPropagator__T]) -> org.orekit.utils.FieldPVCoordinates[_FieldIntelsatElevenElementsPropagator__T]: ...
    def resetInitialState(self, fieldSpacecraftState: org.orekit.propagation.FieldSpacecraftState[_FieldIntelsatElevenElementsPropagator__T]) -> None: ...

class IntelsatElevenElements:
    SYNCHRONOUS_RADIUS_KM: typing.ClassVar[float] = ...
    K: typing.ClassVar[float] = ...
    DRIFT_RATE_SHIFT_DEG_PER_DAY: typing.ClassVar[float] = ...
    def __init__(self, absoluteDate: org.orekit.time.AbsoluteDate, double: float, double2: float, double3: float, double4: float, double5: float, double6: float, double7: float, double8: float, double9: float, double10: float, double11: float): ...
    def getEpoch(self) -> org.orekit.time.AbsoluteDate: ...
    def getLatC(self) -> float: ...
    def getLatC1(self) -> float: ...
    def getLatS(self) -> float: ...
    def getLatS1(self) -> float: ...
    def getLm0(self) -> float: ...
    def getLm1(self) -> float: ...
    def getLm2(self) -> float: ...
    def getLonC(self) -> float: ...
    def getLonC1(self) -> float: ...
    def getLonS(self) -> float: ...
    def getLonS1(self) -> float: ...

class IntelsatElevenElementsPropagator(org.orekit.propagation.analytical.AbstractAnalyticalPropagator):
    @typing.overload
    def __init__(self, intelsatElevenElements: IntelsatElevenElements): ...
    @typing.overload
    def __init__(self, intelsatElevenElements: IntelsatElevenElements, frame: org.orekit.frames.Frame, frame2: org.orekit.frames.Frame): ...
    @typing.overload
    def __init__(self, intelsatElevenElements: IntelsatElevenElements, frame: org.orekit.frames.Frame, frame2: org.orekit.frames.Frame, attitudeProvider: org.orekit.attitudes.AttitudeProvider, double: float): ...
    def getEastLongitudeDegrees(self) -> org.hipparchus.analysis.differentiation.UnivariateDerivative2: ...
    def getFrame(self) -> org.orekit.frames.Frame: ...
    def getGeocentricLatitudeDegrees(self) -> org.hipparchus.analysis.differentiation.UnivariateDerivative2: ...
    def getOrbitRadius(self) -> org.hipparchus.analysis.differentiation.UnivariateDerivative2: ...
    def propagateInEcef(self, absoluteDate: org.orekit.time.AbsoluteDate) -> org.orekit.utils.PVCoordinates: ...
    def resetInitialState(self, spacecraftState: org.orekit.propagation.SpacecraftState) -> None: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.orekit.propagation.analytical.intelsat")``.

    FieldIntelsatElevenElements: typing.Type[FieldIntelsatElevenElements]
    FieldIntelsatElevenElementsPropagator: typing.Type[FieldIntelsatElevenElementsPropagator]
    IntelsatElevenElements: typing.Type[IntelsatElevenElements]
    IntelsatElevenElementsPropagator: typing.Type[IntelsatElevenElementsPropagator]
